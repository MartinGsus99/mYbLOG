{"total":84,"pageSize":12,"pageCount":7,"data":[{"title":"Flask 基础","uid":"3287d8749a931c016e4c3b6db5b48331","slug":"Flask基础","date":"2023-07-04T07:13:45.000Z","updated":"2023-07-07T08:21:56.090Z","comments":true,"path":"api/articles/Flask基础.json","cover":"img/bg3.jpg","text":"Flask 基础一、基础概念 Web 框架，一组库和模块，使 Web 应用程序开发人员能够编写应用程序，而不必担心协议、线程管理等低级细节； Flask，由 Python 编写的 web 应用程序框架，基于 Werkzeug WSGI 工具包和 Jinja2 模板引擎。 WSGI...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"后端","slug":"后端","count":1,"path":"api/categories/后端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"Flask","slug":"Flask","count":1,"path":"api/tags/Flask.json"},{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Docker 一键部署","uid":"a3cfa29d476d34e52c0304b95199a8f7","slug":"Docker一键部署","date":"2023-07-02T13:13:45.000Z","updated":"2023-07-04T07:15:46.263Z","comments":true,"path":"api/articles/Docker一键部署.json","cover":"img/bg1.jpg","text":"Docker 一键部署一、基本操作 sudo passwd 安装完成 ubuntu 系统后，设置 root 密码 切换至 root 管理员 su 3、git clone cd / &amp;&amp; git clone http://用户名:密码@47.103.136.241/...","link":"","photos":[],"count_time":{"symbolsCount":415,"symbolsTime":"1 mins."},"categories":[{"name":"运维","slug":"运维","count":1,"path":"api/categories/运维.json"}],"tags":[{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Webpack","date":"2023-06-29T12:01:46.259Z","updated":"2023-06-29T12:10:09.115Z","comments":true,"path":"api/articles/Webpack.json","cover":null,"text":"Webpack1.使用webpack创建项目vue init webpack vueDemo ","link":"","photos":[],"count_time":{"symbolsCount":48,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"服务端渲染","date":"2023-06-28T02:25:42.639Z","updated":"2023-07-04T08:25:38.962Z","comments":true,"path":"api/articles/服务端渲染.json","cover":null,"text":"服务端渲染SSR一、什么是SSR？ vue支持在浏览器生成和操作DOM，也支持在服务端直接渲染成HTML字符串，作为服务器响应返回给浏览器； 浏览器将静态HTML激活为客户端能够交互的应用； 一个由服务端渲染的VueJS可以被认为是同构的或者通用的，因为吧大部分代码同时运行在服务...","link":"","photos":[],"count_time":{"symbolsCount":677,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"如何高效整理论文","uid":"6ef5dcf5728b7f68617c675eff6caf49","slug":"如何高效整理论文？","date":"2023-06-27T23:51:45.000Z","updated":"2023-06-28T01:25:21.647Z","comments":true,"path":"api/articles/如何高效整理论文？.json","cover":"img/bg17.jpg","text":"如何高效整理论文？https://www.bilibili.com/video/BV1354y1h7Vf/?spm_id_from=333.337.search-card.all.click&amp;vd_source=f47a1518b7d14573404f9ef42bc4a4...","link":"","photos":[],"count_time":{"symbolsCount":515,"symbolsTime":"1 mins."},"categories":[{"name":"日常","slug":"日常","count":5,"path":"api/categories/日常.json"}],"tags":[{"name":"科研","slug":"科研","count":1,"path":"api/tags/科研.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"TS 基础","uid":"4fcf6f790a74def036d077b002f61038","slug":"TS基础","date":"2023-06-26T13:33:45.000Z","updated":"2023-07-04T09:34:14.790Z","comments":true,"path":"api/articles/TS基础.json","cover":"img/bg3.jpg","text":"TS 基础TypeScript一、什么是TypeScript?1.Why we choose TypeScript? JavaScript构建大型复杂Web应用系统不容易； TypeScript为JS的超集，具有可选的类型且可以编译为纯JS。从技术上讲，TS是具有静态类型的JS。...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"VUE","slug":"VUE","count":17,"path":"api/tags/VUE.json"},{"name":"TS","slug":"TS","count":2,"path":"api/tags/TS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Web Audio API","uid":"b9697662cdffe977cb41ca0017dc8bf9","slug":"Web Audio","date":"2023-06-26T13:13:45.000Z","updated":"2023-07-03T09:35:40.499Z","comments":true,"path":"api/articles/Web Audio.json","cover":"img/bg3.jpg","text":"Web Audio API 实现功能可视化、音色合成器、动态混音、声音特效、3D空间音频、均衡器、环境混响 一、基础使用1.AudioContext为音频处理提供一个上下文环境，相当于一个中央控制器，控制音频路由的各个模块； 1.1音频结点AudioNode音频路由中的基本单位，...","link":"","photos":[],"count_time":{"symbolsCount":456,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"},{"name":"TS","slug":"TS","count":2,"path":"api/tags/TS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vue登录页面跳过","uid":"b9b4fcd437d7750f62f23ae4d11d445c","slug":"Vue-Admin-Template跳过登陆页面","date":"2023-06-25T13:33:45.000Z","updated":"2023-06-28T01:25:58.100Z","comments":true,"path":"api/articles/Vue-Admin-Template跳过登陆页面.json","cover":"img/bg3.jpg","text":"Vue 登录页面跳过1.业务需求 后端暂时无法提供接口 需要查看前端页面效果 2.方法/* * @Author: Aruver * @Date: 2022-10-08 09:45:03 * @LastEditors: Aruver * @qq: 37919926 */ impor...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"VUE","slug":"VUE","count":17,"path":"api/tags/VUE.json"},{"name":"项目问题","slug":"项目问题","count":1,"path":"api/tags/项目问题.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"CSS实现响应式布局","date":"2023-04-06T12:51:38.239Z","updated":"2023-04-06T13:44:24.362Z","comments":true,"path":"api/articles/CSS实现响应式布局.json","cover":null,"text":"css实现响应式布局1.响应式布局 响应式布局指同一页面在不同屏幕尺寸下有不同的布局； 传统方式是PC端开发一套，手机端开发一套； 使用响应式布局只需要开发一套就够了； 检测视口分辨率，针对不同客户端来做代码处理，展现不同的布局和内容； css3媒体查询可以让我们针对不同的媒体类...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Session And Cookie","uid":"26bc2020d08ea791ee82a8707889b8be","slug":"Session And Cookie","date":"2023-04-06T11:51:45.000Z","updated":"2023-04-06T03:26:21.125Z","comments":true,"path":"api/articles/Session And Cookie.json","cover":"img/bg10.jpg","text":"Session And Cookie一、Session和Cookie简介1.简介 Cookie的出现是因为http是无状态协议，服务器记不住访问者，刷新一次页面可能就需要输入账号密码重新登录； cookie作用就是让服务器认识你； cookie可以认为是一个变量，形如name=v...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"session","slug":"session","count":1,"path":"api/tags/session.json"},{"name":"cookie","slug":"cookie","count":1,"path":"api/tags/cookie.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Linux Shell","uid":"e9cc1e6aaaea90ce1263cf8fa336b7a8","slug":"Linux Shell","date":"2023-04-06T10:51:45.000Z","updated":"2023-04-06T03:26:47.795Z","comments":true,"path":"api/articles/Linux Shell.json","cover":"img/bg11.jpg","text":"Linux Shell 标准输入和命令参数的区别； 后台运行命令在推出中断后也全部退出； 单引号和双引号表示字符串的区别； 有的命令和sudo一起用就会Command not found; 一、标准输入和参数的区别1.标准输入和参数#错误 where connect.sh | r...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"shell","slug":"shell","count":1,"path":"api/tags/shell.json"},{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"NodeJS From W3C","date":"2023-04-05T07:29:35.904Z","updated":"2023-04-05T08:35:12.085Z","comments":true,"path":"api/articles/NodeJS From W3C.json","cover":null,"text":"Node JS From W3C一、NodeJS回调函数 异步编程依托于回调来实现； 回调函数完成任务后会被调用，Node使用了大量得回调函数，Node所有Api都支持回调函数； 例如，我们可以一边读取文件，一边执行其他命令，在文件读取完成后，我们将文件内容作为回调函数的参数返回...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}