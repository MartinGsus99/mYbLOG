{"total":77,"pageSize":12,"pageCount":7,"data":[{"title":"Axios详解","uid":"497057504cdf696233ca7859e8edacd2","slug":"Axios详解","date":"2022-10-27T08:09:00.000Z","updated":"2022-10-27T08:11:25.944Z","comments":true,"path":"api/articles/Axios详解.json","cover":"img/axios.png","text":"Axios基于promise可以用于浏览器和node.js的网络请求库一、基础定义Promise1.promise一个对象，用于传递异步操作的消息；本意上可以理解为，承诺过一段时间返回一个结果。 basic 其实就是一个请求发出去以后，并不能马上获得需要的数据，因此整个js代码需...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"JS","slug":"JS","count":2,"path":"api/categories/JS.json"}],"tags":[{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vue笔记","uid":"51d3872cd56d489d412dadd4338316da","slug":"JS","date":"2022-10-11T18:51:45.000Z","updated":"2023-04-04T13:35:28.254Z","comments":true,"path":"api/articles/JS.json","cover":"img/vue.png","text":"JS一、各司其职 HTML、CSS、JS职能分离 二、组件封装 好的UI组件具有正确性、拓展性、复用性 1.结构轮播图其实是一个列表结构； 通过css将图片层叠在一起； 2.展现效果3.行为API 功能 Event 控制流：使用自定义的事件来解耦 4.改进空间 解耦+ 三、过程抽...","link":"","photos":[],"count_time":{"symbolsCount":835,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vue笔记","uid":"51d3872cd56d489d412dadd4338316da","slug":"JS基础","date":"2022-09-11T18:51:45.000Z","updated":"2023-04-04T13:35:41.643Z","comments":true,"path":"api/articles/JS基础.json","cover":"img/vue.png","text":"JS高级程序设计一、基础基础基础1.基础语法 for-in //for-in语法是一种精准的迭代语句，可以用来枚举对象的属性； for(property in expression)&#123; statement; &#125; for(var propName in wind...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"排序","uid":"2a1893ca085cc0c5b7d1cdcd8c0b1c91","slug":"Ch8排序","date":"2021-08-31T12:57:45.000Z","updated":"2021-08-31T12:51:24.000Z","comments":true,"path":"api/articles/Ch8排序.json","cover":"img/bg20.jpg","text":"排序算法一、插入排序每次将一个待排序的记录插入到前面已经排序的序列； void InsertSort(RecordType R[],int num) &#123; int index1,index2; for(index1=2;index1&lt;=num;index1++) &...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"编程","slug":"编程","count":9,"path":"api/categories/编程.json"}],"tags":[{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"贪心算法","uid":"827701aa0aeba949971d70c354c78372","slug":"贪心算法","date":"2021-08-29T10:03:45.000Z","updated":"2021-08-30T13:37:44.000Z","comments":true,"path":"api/articles/贪心算法.json","cover":"img/bg15.jpg","text":"贪心算法思想：每一步都选择局部最优解 #问题描述：现有几个州需要使用广播电台覆盖，每个广播电台覆盖的范围不一样，找出需要的最小的州的合集； #解：使用贪心算法，（1）选出一个覆盖最多未覆盖州的电台；重复知道覆盖所有电台； # 州名 states_need = set([\"a\", ...","link":"","photos":[],"count_time":{"symbolsCount":789,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":3,"path":"api/categories/算法.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"贪心算法","slug":"贪心算法","count":1,"path":"api/tags/贪心算法.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CH7 查找","uid":"35fa380e6c3de504a5cc1614ac079c98","slug":"CH7 查找","date":"2021-08-25T12:57:45.000Z","updated":"2021-08-25T14:30:44.000Z","comments":true,"path":"api/articles/CH7 查找.json","cover":"img/bg3.jpg","text":"一、顺序查找MSL最大查找长度，ASL平均查找长度； ASL成功=SumPi（n-i+1） ASL失败=n+1 #include &lt;stdio.h> #include &lt;stdlib.h> #define MAXSIZE 100 typedef int keyType...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"编程","slug":"编程","count":9,"path":"api/categories/编程.json"}],"tags":[{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Sound of Walking Away","uid":"0456a819f148a1e76c28ca6cd747afa8","slug":"Sound of Walking Away","date":"2021-08-22T16:00:46.000Z","updated":"2021-08-22T15:52:14.000Z","comments":true,"path":"api/articles/Sound of Walking Away.json","cover":"img/bg14.jpg","text":" Don’t come find me, I won’t be here waiting请别试图寻找我 我不会再原地等待I so can do it alone, you’re not worth staying我自己可以过得很好 你不值得我再多停留 Weren’t listen...","link":"","photos":[],"count_time":{"symbolsCount":475,"symbolsTime":"1 mins."},"categories":[{"name":"日常","slug":"日常","count":5,"path":"api/categories/日常.json"}],"tags":[{"name":"日常","slug":"日常","count":2,"path":"api/tags/日常.json"},{"name":"音乐推荐","slug":"音乐推荐","count":1,"path":"api/tags/音乐推荐.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"树","uid":"01cf899dac80c5a14d5d881768abc55f","slug":"Ch5 树","date":"2021-08-21T12:57:45.000Z","updated":"2021-08-25T14:22:20.000Z","comments":true,"path":"api/articles/Ch5 树.json","cover":"img/bg22.jpg","text":"Ch 5 树一、二叉树及其性质（1）二叉树可以为空，但是二叉有序树至少三个节点； （2）满二叉树：2^k-1个节点、 （3）非空二叉树第i层的节点数不超过2^i-1个； （4）深度为k的二叉树最少k个节点，最多2^k-1个节点； （5）n0=n2-1; （6）n个节点的二叉树深度...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"编程","slug":"编程","count":9,"path":"api/categories/编程.json"}],"tags":[{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"特殊矩阵及广义表","uid":"aa3121f0eb296174fb5353bf6a5b23c1","slug":"CH4 特殊矩阵广义表","date":"2021-08-20T12:57:45.000Z","updated":"2021-08-22T15:45:58.000Z","comments":true,"path":"api/articles/CH4 特殊矩阵广义表.json","cover":"img/bg16.jpg","text":"一、对称矩阵 void PrintSymetryMatrix(int m[],int n) &#123; int row,col; printf(\"Symetry Matrix:\\n\"); for(row=0;row&lt;n;row++) &#123; for(col=0;co...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"编程","slug":"编程","count":9,"path":"api/categories/编程.json"}],"tags":[{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"队列和栈","uid":"e90fef94527ba0dbff46e9458222830c","slug":"Ch2 队列和栈","date":"2021-08-15T12:57:45.000Z","updated":"2021-08-30T13:31:10.000Z","comments":true,"path":"api/articles/Ch2 队列和栈.json","cover":"img/bg1.jpg","text":"Ch1 栈和队列 ","link":"","photos":[],"count_time":{"symbolsCount":9,"symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":9,"path":"api/categories/编程.json"}],"tags":[{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Autumn_XDU","uid":"f827cbb80b8c49cdec8fd12f9ea90f25","slug":"XDU-Autumn","date":"2021-08-08T16:00:46.000Z","updated":"2021-08-07T16:14:54.000Z","comments":true,"path":"api/articles/XDU-Autumn.json","cover":"img/xdu.jpg","text":"XDU的秋天 呜呜呜,XD的秋天也太好看了吧~~ ","link":"","photos":[],"count_time":{"symbolsCount":26,"symbolsTime":"1 mins."},"categories":[{"name":"日常","slug":"日常","count":5,"path":"api/categories/日常.json"}],"tags":[{"name":"摄影","slug":"摄影","count":3,"path":"api/tags/摄影.json"},{"name":"日常","slug":"日常","count":2,"path":"api/tags/日常.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"顺序表","uid":"d9e48ebde6ac3449bf916754850ccddb","slug":"CH1 顺序表基本操作及实现（C）","date":"2021-08-08T12:57:45.000Z","updated":"2021-08-15T14:55:04.000Z","comments":true,"path":"api/articles/CH1 顺序表基本操作及实现（C）.json","cover":"img/bg1.jpg","text":"CH1 顺序表基本操作及实现（C） #include&lt;stdio.h> #include&lt;stdlib.h> #define MAXSIZE 50 #define Elemtype int typedef struct&#123; Elemtype data[MAXS...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"编程","slug":"编程","count":9,"path":"api/categories/编程.json"}],"tags":[{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}