{"title":"YK大佬的面试题","uid":"26c58976fec82d7921ed276f388f2352","slug":"前端","date":"2021-04-12T15:41:10.000Z","updated":"2021-07-22T05:40:22.000Z","comments":true,"path":"api/articles/前端.json","keywords":"Love And Freedom","cover":"img/bg10.jpg","content":"<h1 id=\"前端面试问题\"><a href=\"#前端面试问题\" class=\"headerlink\" title=\"##前端面试问题\"></a>##前端面试问题</h1><h2 id=\"一、JS\"><a href=\"#一、JS\" class=\"headerlink\" title=\"一、JS\"></a>一、JS</h2><p>1.JS中的基础数据类型：  6种，undefined，null，boolean，string，number，symbol；<br>2.let和var的区别    let：有作用域，不会出现变量提升，不与全局环境挂钩；<br>3.this是什么？    this是一种指向，在运行的时候，会指向最后调用它的对象；<br>4.怎么判断一个变量是什么数据类型？<br>typeof，缺点:只能判断基础数据类型，对于检测对象以及数组乏力； instanceof：为了解决前面的问题，它可以判断一个对象是不是数组； object。prototype。toString。call（检测对象）；<br>5.ajax    局部更新不刷新整个页面；<br>6.promise基本了解            为了解决ajax回调地域的问题，下一个请求依赖上一个请求返回的数据，会造成这；promise支持链式调用，所以能解决这个问题；<br>7.async/await            将异步的代码写出同步的风格，就是一个语法糖；promise+generator的语法糖；<br>8.dom操作有哪些？            </p>\n<h2 id=\"二、CSS\"><a href=\"#二、CSS\" class=\"headerlink\" title=\"二、CSS\"></a>二、CSS</h2><p>1.居中，块级和行内<br>行内：text-align：center；<br>块级：首先定义宽度，margin：0，auto；<br>其他方法：父元素display设为flex。加上一句话:justify-content；center；<br>2.垂直居中<br>父元素display设为flex。加上一句话:justify-content；center；align-items：center；<br>3.float布局以及缺点，文档流；<br>缺点：最开始用来解决文本围绕图片问题，但是有一个缺点，会造成父元素高度塌陷，因为脱离了文档流；<br>4.position的属性有哪些？<br>abosulte:绝对定位  子元素位置根据父元素决定<br>fixed:固定定位     跟据浏览器决定 ，<br>relative：相对定位 根据应该出现的位置定位；<br>5.flex布局          是一个弹性的伸缩盒子模型</p>\n<h2 id=\"三、vue\"><a href=\"#三、vue\" class=\"headerlink\" title=\"三、vue\"></a>三、vue</h2><p>1.组件通信<br>2.为什么子组件的数据需要用函数形式，根组件不用；<br>3.computed/watch的用法和区别；<br>4.router了解</p>\n","text":"##前端面试问题一、JS1.JS中的基础数据类型： 6种，undefined，null，boolean，string，number，symbol；2.let和var的区别 let：有作用域，不会出现变量提升，不与全局环境挂钩；3.this是什么？ this是一种指向，在运行的时候...","link":"","photos":[],"count_time":{"symbolsCount":932,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"面试","slug":"面试","count":2,"path":"api/tags/面试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">##前端面试问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81JS\"><span class=\"toc-text\">一、JS</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81CSS\"><span class=\"toc-text\">二、CSS</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81vue\"><span class=\"toc-text\">三、vue</span></a></li></ol></li></ol>","author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Ajax","uid":"443175316fe2bc45d543d31728717318","slug":"Ajax","date":"2021-04-12T15:41:10.000Z","updated":"2021-07-22T05:37:04.000Z","comments":true,"path":"api/articles/Ajax.json","keywords":"Love And Freedom","cover":"img/bg1.jpg","text":"AJAXAsynchronous Javascript and XML;(异步的javascript和XML)。 ✨无须更新整个网页的情况下，更新部分网页； 传统的网页，需要更新或者提交一个表单，都需要重新加载整个网页； 增强了B/S（浏览器/服务器）的体验性； 高可用，更丰富，...","link":"","photos":[],"count_time":{"symbolsCount":699,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"面试","slug":"面试","count":2,"path":"api/tags/面试.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数据结构","uid":"81579b6c641dedc829a2b0058112fc0c","slug":"Dijkstra算法","date":"2021-04-09T10:03:45.000Z","updated":"2021-04-09T09:14:40.000Z","comments":true,"path":"api/articles/Dijkstra算法.json","keywords":"Love And Freedom","cover":"img/dijsktra.png","text":"关于Dijkstra算法✔重要 1.基本原理假设它的起点是 a ，要求它到各点的最短距离 Dijkstra 思路是维护一个集合 s ，集合内的点是已经确定最短路的点，可以视为一个大整体，每次操作找出与集合相邻的点中距离起点最近的点加入集合中，并确定它的最短路为它的上家的最短路+该...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"算法","slug":"算法","count":3,"path":"api/categories/算法.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"王道考研","slug":"王道考研","count":1,"path":"api/tags/王道考研.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}