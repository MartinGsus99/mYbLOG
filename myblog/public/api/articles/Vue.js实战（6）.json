{"title":"Vue.js实战（6）","uid":"154b411750a352c86b05a7e9248c8363","slug":"Vue.js实战（6）","date":"2020-12-01T13:18:45.000Z","updated":"2020-12-06T08:27:36.000Z","comments":true,"path":"api/articles/Vue.js实战（6）.json","keywords":"Love And Freedom","cover":"img/vue_js_shizhan.jpg","content":"<h1 id=\"Ch8-自定义命令\"><a href=\"#Ch8-自定义命令\" class=\"headerlink\" title=\"Ch8 自定义命令\"></a>Ch8 自定义命令</h1><h3 id=\"一、基本用法\"><a href=\"#一、基本用法\" class=\"headerlink\" title=\"一、基本用法\"></a>一、基本用法</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//全局注册</span>\n\n    Vue<span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">'focus'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//指令选项</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//局部注册，作用域在app内</span>\n        <span class=\"token keyword\">var</span> app<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">directives</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">focus</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">//指令选项</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>bind：第一次绑定到元素时使用；</li>\n<li>inserted：被绑定元素插入父节点时使用；</li>\n<li>update：绑定元素模板更新时使用，不论绑定值是否发生变化；</li>\n<li>componentUpdated：被绑定元素完成一次更新周期时使用；</li>\n<li>unbind： 指令与元素解绑时调用；</li>\n</ol>\n<h3 id=\"二、实战\"><a href=\"#二、实战\" class=\"headerlink\" title=\"二、实战\"></a>二、实战</h3><p>代码已经存在电脑</p>\n<h1 id=\"Ch9-Render函数\"><a href=\"#Ch9-Render函数\" class=\"headerlink\" title=\"Ch9 Render函数\"></a>Ch9 Render函数</h1><h3 id=\"一、Virtual-Dom：一个JavaScript对象，在状态发生变化时，Virtual-Dom会进行Diff运算，来更新需要被替换的DOM，并不是全部重新绘制；\"><a href=\"#一、Virtual-Dom：一个JavaScript对象，在状态发生变化时，Virtual-Dom会进行Diff运算，来更新需要被替换的DOM，并不是全部重新绘制；\" class=\"headerlink\" title=\"一、Virtual Dom：一个JavaScript对象，在状态发生变化时，Virtual Dom会进行Diff运算，来更新需要被替换的DOM，并不是全部重新绘制；\"></a>一、Virtual Dom：一个JavaScript对象，在状态发生变化时，Virtual Dom会进行Diff运算，来更新需要被替换的DOM，并不是全部重新绘制；</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> vNode<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'main'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">//p节点</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>1.vNode分类：</p>\n<table>\n<thead>\n<tr>\n<th>Node</th>\n<th>Function</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ElementVnode</td>\n<td>普通元素节点</td>\n</tr>\n<tr>\n<td>TextVNode</td>\n<td>文本节点</td>\n</tr>\n<tr>\n<td>ComponentVNode</td>\n<td>组件节点</td>\n</tr>\n<tr>\n<td>EmptyVNode</td>\n<td>无内容的注释节点</td>\n</tr>\n<tr>\n<td>CloneVNode</td>\n<td>克隆节点</td>\n</tr>\n</tbody></table>\n<h3 id=\"二、createElement用法\"><a href=\"#二、createElement用法\" class=\"headerlink\" title=\"二、createElement用法\"></a>二、createElement用法</h3><p>1.传统方法：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ele</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ele</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ele'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">' &lt;div id=\"element\" :class=\"&#123;show:show&#125;\" @click=\"handleClick\">元素内容&lt;/div>'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">show</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function-variable function\">handleClick</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clock'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>2.使用Render改写后</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ele</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ele</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ele'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">createElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token string-property property\">'show'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>show\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">attrs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'element'</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token literal-property property\">click</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'文本内容1'</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">show</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function-variable function\">handleClick</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>3，就此例而言，render得写法复杂于template写法，所以在合适的场景使用render</p>\n<p>4.约束：所有的组件树中，如果VNODE是组件或者含有slot，那么Vnode必须唯一</p>\n<p>5.render函数里创建了一个cloneVNode得工厂函数，通过递归将slot所有子节点克隆一份，并对VNode的关键属性也复制了一份；</p>\n<h3 id=\"三、函数化组件\"><a href=\"#三、函数化组件\" class=\"headerlink\" title=\"三、函数化组件\"></a>三、函数化组件</h3><p>​    1.vue提供了一个functional的布尔值选项，设置为true可以使组件无状态和无实例，也就没有data和this上下文；render返回虚拟节点也更加容易渲染；</p>\n<p>​    2.函数化组件得是适用场景：</p>\n<ul>\n<li>程序化得在多个组件中选择一个</li>\n<li>在将children，props，data传递给子组件之前操作他们；</li>\n</ul>\n","text":"Ch8 自定义命令一、基本用法//全局注册 Vue.directive('focus',&#123; //指令选项 &#125;) //局部注册，作用域在app内 var app=new Vue(&#123; el:\"#app\", directives:&#123; focus:...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"VUE","slug":"VUE","count":17,"path":"api/tags/VUE.json"},{"name":"Vue.js实战","slug":"Vue-js实战","count":11,"path":"api/tags/Vue-js实战.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Ch8-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Ch8 自定义命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">一、基本用法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">二、实战</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Ch9-Render%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">Ch9 Render函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Virtual-Dom%EF%BC%9A%E4%B8%80%E4%B8%AAJavaScript%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%9C%A8%E7%8A%B6%E6%80%81%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E6%97%B6%EF%BC%8CVirtual-Dom%E4%BC%9A%E8%BF%9B%E8%A1%8CDiff%E8%BF%90%E7%AE%97%EF%BC%8C%E6%9D%A5%E6%9B%B4%E6%96%B0%E9%9C%80%E8%A6%81%E8%A2%AB%E6%9B%BF%E6%8D%A2%E7%9A%84DOM%EF%BC%8C%E5%B9%B6%E4%B8%8D%E6%98%AF%E5%85%A8%E9%83%A8%E9%87%8D%E6%96%B0%E7%BB%98%E5%88%B6%EF%BC%9B\"><span class=\"toc-text\">一、Virtual Dom：一个JavaScript对象，在状态发生变化时，Virtual Dom会进行Diff运算，来更新需要被替换的DOM，并不是全部重新绘制；</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81createElement%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">二、createElement用法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%87%BD%E6%95%B0%E5%8C%96%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">三、函数化组件</span></a></li></ol></li></ol></li></ol>","author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Vue.js实战（7）","uid":"fc44072b13f1424ab91fdf2f4612367d","slug":"Vue.js实战（7）","date":"2020-12-03T13:18:45.000Z","updated":"2020-12-07T10:01:04.000Z","comments":true,"path":"api/articles/Vue.js实战（7）.json","keywords":"Love And Freedom","cover":"img/vue_js_shizhan.jpg","text":"Ch10 使用webpack一、webpack基础​ 1.import和export var config=&#123; version:'1.1.0' &#125;; export &#123; Config &#125;; export var config=&#123; v...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"VUE","slug":"VUE","count":17,"path":"api/tags/VUE.json"},{"name":"Vue.js实战","slug":"Vue-js实战","count":11,"path":"api/tags/Vue-js实战.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vue笔记","uid":"51d3872cd56d489d412dadd4338316da","slug":"Vue实战问题","date":"2020-11-29T13:18:45.000Z","updated":"2020-11-29T13:19:18.000Z","comments":true,"path":"api/articles/Vue实战问题.json","keywords":"Love And Freedom","cover":"img/vue.png","text":"Vue实战问题 1.VScode中部分组件调用显示蓝色，部分显示红色？ 2.标签组件出现Bug,无法显示标题，有待解决； CSS特性 cursor规定要显示的光标的类型，此处pointer为一只手 CSS 框模型概述 3.padding 属性定义元素的内边距。padding 属性...","link":"","photos":[],"count_time":{"symbolsCount":595,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"VUE","slug":"VUE","count":17,"path":"api/tags/VUE.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}