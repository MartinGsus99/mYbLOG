{"title":"前端面筋","uid":"ea16d4275e7521767b51128cd8bf6cd4","slug":"前端面经","date":"2023-03-27T10:51:45.000Z","updated":"2023-05-25T12:53:43.059Z","comments":true,"path":"api/articles/前端面经.json","keywords":"Love And Freedom","cover":"img/bg11.jpg","content":"<h1 id=\"前端三大件\"><a href=\"#前端三大件\" class=\"headerlink\" title=\"前端三大件\"></a>前端三大件</h1><h2 id=\"一、HTML\"><a href=\"#一、HTML\" class=\"headerlink\" title=\"一、HTML\"></a>一、HTML</h2><h2 id=\"二、CSS\"><a href=\"#二、CSS\" class=\"headerlink\" title=\"二、CSS\"></a>二、CSS</h2><h3 id=\"1-Flex布局\"><a href=\"#1-Flex布局\" class=\"headerlink\" title=\"1.Flex布局\"></a>1.Flex布局</h3><blockquote>\n<p>Flex布局包括容器和Item两部分；一个容器的所有子元素都成为他的item成员；</p>\n</blockquote>\n<p><img src=\"https://s3.bmp.ovh/imgs/2023/03/16/1d4271c9004b7a95.png\"></p>\n<ul>\n<li>flex-direction:主轴方向，row，row-reverse，column，column-recerse；</li>\n<li>flex-wrap:默认所有的容器里的Item都在一条线上，一行放不下可以换行：nowrap（默认不换行）wrap（换行，第一行在上）</li>\n<li>flex-flow:前两者的缩写，默认row nowrap</li>\n<li>justify-content:主轴对其方式，有五个值，flex-start:主轴起始位置对齐；flex-end:主轴结束位置对齐；center:居中；space-between:始末位置各一个，中间按照平均间距防止；space-around:每个item周围的间隔相同；</li>\n<li>align-items:纵轴如何对齐，五个值：flex-start:从最上方开始，排列row；flex-end:最底下开始；center:中间线；baseline:项目的第一行文字的基线对其；stretch:默认，item妹有设置高度或者auto，占满容器；</li>\n<li>align-content:定义多根轴线对齐方式，一行则不生效；</li>\n<li>order属性：属于item，按照order大小排序；</li>\n<li>flex-grow:定义item的放大比例；</li>\n<li>flex-shrink:按照比例缩小；</li>\n<li>flex: flex-grow,flex-shrink,flex-basis;</li>\n<li>align-self:允许item自己的属性；可覆盖aligin-items;</li>\n</ul>\n<h3 id=\"2-CSS预处理器\"><a href=\"#2-CSS预处理器\" class=\"headerlink\" title=\"2.CSS预处理器\"></a>2.CSS预处理器</h3><blockquote>\n<p>CSS预处理器式一种基于CSS，用于解决CSS难以解决的问题的Domian Specific Language;</p>\n<p>通过用一种专门的编程语言，为CSS添加一些编程特性，再编译成CSS文件；</p>\n<p>如：语法不够强大，妹有变量和合理的样式复用机制等；</p>\n</blockquote>\n<h5 id=\"CSS预处理器的作用\"><a href=\"#CSS预处理器的作用\" class=\"headerlink\" title=\"CSS预处理器的作用\"></a>CSS预处理器的作用</h5><ul>\n<li>提供css缺失的样式层复用机制，减少冗余代码；</li>\n<li>提高样式代码的可维护性；</li>\n</ul>\n<h5 id=\"Sass（-scss）\"><a href=\"#Sass（-scss）\" class=\"headerlink\" title=\"Sass（.scss）\"></a>Sass（.scss）</h5><p>成熟稳定强大的专业级CSS拓展语言，兼容CSS、功能丰富；</p>\n<p>功能：</p>\n<ul>\n<li>变量、常量</li>\n</ul>\n<pre class=\"line-numbers language-scss\" data-language=\"scss\"><code class=\"language-scss\"><span class=\"token property\"><span class=\"token variable\">$bgColor</span></span><span class=\"token punctuation\">:</span>#fff<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//以$开头，表示全局和局部变量</span>\n<span class=\"token selector\">div</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\"><span class=\"token variable\">$width</span></span><span class=\"token punctuation\">:</span>100px<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//局部变量</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$width</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$bgColor</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//变量用在属性中，需要写在#&#123;&#125;中</span>\n<span class=\"token property\"><span class=\"token variable\">$posi</span></span><span class=\"token punctuation\">:</span>left<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">div</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">border-<span class=\"token variable\">#&#123;$posi&#125;</span></span><span class=\"token punctuation\">:</span>1 px solid <span class=\"token variable\">$color</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//默认变量，值后面加上 ！default</span>\n<span class=\"token property\"><span class=\"token variable\">$myLineHeight</span></span><span class=\"token punctuation\">:</span>1.5 <span class=\"token statement keyword\">!default</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">body</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$myLineHeight</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">body</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>1.5<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>CSS代码嵌套</li>\n</ul>\n<pre class=\"line-numbers language-scss\" data-language=\"scss\"><code class=\"language-scss\"><span class=\"token comment\">//在一个选择器中嵌套另一个选择器来实现继承，增强了sass文件的结构性和可读性；</span>\n<span class=\"token comment\">//选择器嵌套中，可以使用&amp;表示父元素选择器；</span>\n<span class=\"token selector\">#top_btn</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>40px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-transform</span><span class=\"token punctuation\">:</span>capitalize<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\">li</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">float</span><span class=\"token punctuation\">:</span>left<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token selector\">a</span><span class=\"token punctuation\">&#123;</span>\n        display：block<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#ddd<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//属性嵌套</span>\n<span class=\"token selector\">.main-container</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//选择器嵌套</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-top</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//伪类嵌套</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>green'\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>混入Mixin</li>\n</ul>\n<blockquote>\n<p>Mixins是CSS预处理器最强大的特性；</p>\n<p>可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用；</p>\n</blockquote>\n<pre class=\"line-numbers language-scss\" data-language=\"scss\"><code class=\"language-scss\"><span class=\"token comment\">//无参数mixin</span>\n<span class=\"token keyword\">@mixin</span> <span class=\"token selector\">center-block</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span>auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span>auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.btn</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">@include</span> center-block<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-scss\" data-language=\"scss\"><code class=\"language-scss\"><span class=\"token comment\">//有参数mixin</span>\n<span class=\"token keyword\">@mixin</span> <span class=\"token function\">theme</span><span class=\"token punctuation\">(</span><span class=\"token property\"><span class=\"token variable\">$theme</span></span><span class=\"token punctuation\">:</span>Darkgray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$theme</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span>0 0 1px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$theme</span><span class=\"token punctuation\">,</span> .25<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#fff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.infor</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">@include</span> theme<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.alert</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">@include</span> <span class=\"token function\">theme</span><span class=\"token punctuation\">(</span><span class=\"token property\"><span class=\"token variable\">$theme</span></span><span class=\"token punctuation\">:</span>Darkred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//多个mixin,多个参数以逗号分隔，如果@include传入的参数个数小于@mixin定义参数的个数，则按照顺序表示，后面不足的使用默认值；如果不足的没有默认值则报错；</span>\n<span class=\"token keyword\">@mixin</span> <span class=\"token function\">theme</span><span class=\"token punctuation\">(</span><span class=\"token property\"><span class=\"token variable\">$theme</span></span><span class=\"token punctuation\">:</span>Darkgray<span class=\"token punctuation\">,</span><span class=\"token property\"><span class=\"token variable\">$color</span></span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$theme</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span>0 0 1px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$theme</span><span class=\"token punctuation\">,</span> .25<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$red</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-scss\" data-language=\"scss\"><code class=\"language-scss\"><span class=\"token comment\">//模块系统</span>\n<span class=\"token comment\">//test.scss</span>\n<span class=\"token property\"><span class=\"token variable\">$font-stack</span></span><span class=\"token punctuation\">:</span> Helvetica<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n<span class=\"token property\"><span class=\"token variable\">$primary-color</span></span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">body </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 100% <span class=\"token variable\">$font-stack</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$primary-color</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//styles.scss</span>\n<span class=\"token comment\">// 使用@use导入文件</span>\n<span class=\"token keyword\">@use</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 生成了一个 test 命名空间</span>\n\n<span class=\"token selector\">.inverse </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> test.<span class=\"token variable\">$primary-color</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>继承</li>\n</ul>\n<pre class=\"line-numbers language-scss\" data-language=\"scss\"><code class=\"language-scss\"><span class=\"token comment\">/* This CSS will print because %message-shared is extended. */</span>\n<span class=\"token selector\"><span class=\"token placeholder\">%message-shared</span> </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// This CSS won't print because %equal-heights is never extended.</span>\n<span class=\"token selector\"><span class=\"token placeholder\">%equal-heights</span> </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.message </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">@extend</span> <span class=\"token placeholder selector\">%message-shared</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.success </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">@extend</span> <span class=\"token placeholder selector\">%message-shared</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.error </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">@extend</span> <span class=\"token placeholder selector\">%message-shared</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.warning </span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">@extend</span> <span class=\"token placeholder selector\">%message-shared</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>函数</li>\n</ul>\n<pre class=\"line-numbers language-scss\" data-language=\"scss\"><code class=\"language-scss\">x <span class=\"token keyword\">@use</span> <span class=\"token string\">\"sass:math\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">.container</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span>flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">article[role=\"main\"]</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span>math.<span class=\"token function\">div</span><span class=\"token punctuation\">(</span>600px<span class=\"token punctuation\">,</span>960px<span class=\"token punctuation\">)</span>*100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">aside[role=\"complementary\"]</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span>math.<span class=\"token function\">div</span><span class=\"token punctuation\">(</span>300px<span class=\"token punctuation\">,</span>960px<span class=\"token punctuation\">)</span>*100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span>auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//支持加减乘除，循环等；</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>缺点：采用Ruby语言编写，单独使用妹有问题，但是工程化项目中，存在问题；</p>\n<ul>\n<li>需要借助node-sass,node版本与node-sass版本相关联，一旦本地nodeJS升级，出现node-sass无法工作；（Rebuild或者冲洗安装node-sass）</li>\n<li>需要node-gyp作为先决条件-&gt;需要兼容版本的python；</li>\n<li>binding.node源无法访问或者速度慢；</li>\n</ul>\n<h5 id=\"Less\"><a href=\"#Less\" class=\"headerlink\" title=\"Less\"></a>Less</h5><p>Less是CSS预处理语言，拓展了CSS，增加了变量、Mixin、函数等特性；使CSS更易维护和拓展。Less可以运行在Node或浏览器端；</p>\n<h5 id=\"Stylus\"><a href=\"#Stylus\" class=\"headerlink\" title=\"Stylus\"></a>Stylus</h5><p>Stylus是一种创新的样式表语言，可编译为CSS。Stylus是用nodeJS构建的；</p>\n<h3 id=\"3-多屏适应，自适应布局和响应式布局区别\"><a href=\"#3-多屏适应，自适应布局和响应式布局区别\" class=\"headerlink\" title=\"3.多屏适应，自适应布局和响应式布局区别\"></a>3.多屏适应，自适应布局和响应式布局区别</h3><h3 id=\"4-过渡动画\"><a href=\"#4-过渡动画\" class=\"headerlink\" title=\"4.过渡动画\"></a>4.过渡动画</h3><ul>\n<li>transform（平移旋转缩放）</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>50px<span class=\"token punctuation\">,</span>100px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">/*平移，x y方向*/</span>\n    <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>20deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">/*旋转 顺时针旋转20°*/</span>\n    <span class=\"token function\">rotateX</span><span class=\"token punctuation\">(</span>150deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">/*x轴旋转*/</span>\n    <span class=\"token function\">scaleX</span><span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">/*增大两倍宽度*/</span>\n    <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span>2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">/*宽度一赔，高度两倍*/</span>\n    \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>animation</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">*animation-name：关键帧的名字，该参数必需。\n*animation-duration：动画持续的时间，该参数必需。\nanimation-timing-function：定时器函数，默认是ease。\nanimation-delay：动画效果多少秒后开始，默认为0。\nanimation-iteration-count：动画重复的次数，可以指定为一个整数，表示多少次，默认值是infinite关键字，表示无限次。\nanimation-direction：动画方向，可能的值为forward、backward或alternating，默认值为normal。\nanimation-fill-mode：默认值为none。\nanimation-play-state：动画默认是否生效，默认值为running。\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>animation</code> 强调流程与控制，对元素的一个或多个属性的变化进行控制，可以有多个<a href=\"https://so.csdn.net/so/search?q=%E5%85%B3%E9%94%AE%E5%B8%A7&spm=1001.2101.3001.7020\">关键帧</a>（<code>animation</code> 和 <code>@keyframes</code>结合使用）</li>\n<li><code>transition</code> 强调过渡，是元素的一个或多个属性发生变化时产生的过渡效果，同一个元素通过两个不同的途径获取样式；</li>\n</ul>\n<h3 id=\"5-标准盒模型和怪异盒模型\"><a href=\"#5-标准盒模型和怪异盒模型\" class=\"headerlink\" title=\"5.标准盒模型和怪异盒模型\"></a>5.标准盒模型和怪异盒模型</h3><p>W3C标准盒子模型由：content、margin、padding、border组成；</p>\n<h5 id=\"区别：总宽度的计算公式不一样\"><a href=\"#区别：总宽度的计算公式不一样\" class=\"headerlink\" title=\"区别：总宽度的计算公式不一样\"></a>区别：总宽度的计算公式不一样</h5><p>标准盒模型总宽度=width+margin（左右）+padding（左右）+border（左右）；</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201224112703410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwODQ4Mw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>怪异盒模型总宽度=width+margin（左右）（width已经包含padding和border的值）；</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201224113002950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwODQ4Mw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">    <span class=\"token selector\">.box</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 10px solid #00007e<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fec997<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box <span class=\"token comment\">/* 设置盒子类型 */</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/*\n\tcontent-box:标准盒模型；\n\tborder-box:怪异盒模型；\n\tpadding-box:盒子宽度等于content+padding;\n\tinherit:从父元素继承box-sizeing的属性；\n*/</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"三、JS\"><a href=\"#三、JS\" class=\"headerlink\" title=\"三、JS\"></a>三、JS</h2><h3 id=\"1-基本数据类型\"><a href=\"#1-基本数据类型\" class=\"headerlink\" title=\"1.基本数据类型\"></a>1.基本数据类型</h3><ul>\n<li>基本数据类型</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">number,string,undefined,Boolean,null;\nES6添加：Symbol<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>复杂数据类型</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Object；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>0.1+0.2！=0.3</p>\n<p>浮点数值的最高精度事28位小数，0.1+0.2= 0.30000 0000 0000 0004</p>\n<p>基于IEEE754数值的浮点计算通病；</p>\n</blockquote>\n<h3 id=\"2-ES6新特性\"><a href=\"#2-ES6新特性\" class=\"headerlink\" title=\"2.ES6新特性\"></a>2.ES6新特性</h3><blockquote>\n<p>ES6=ES2015</p>\n</blockquote>\n<ul>\n<li>新增块级作用域let,const;</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//let </span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//循环体外部能够访问i，使用let不会</span>\n\n<span class=\"token comment\">//const声明的是常量，不能被修改；</span>\n<span class=\"token keyword\">const</span> a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//const 声明的数组不可以被重新赋值，但是可以修改元素；</span>\n<span class=\"token keyword\">const</span> names<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>定义类的语法糖；</li>\n<li>新增基本数据类型Symbol；</li>\n<li>新增变量解构赋值；</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//数组</span>\n<span class=\"token keyword\">let</span> arr<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>arr<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//对象</span>\n<span class=\"token keyword\">const</span> person<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"Martin\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">languages</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Java'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Python'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span>n<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span>a<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span>l<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">=</span>person<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>函数参数允许默认值，引入rest参数，新增箭头函数；</li>\n</ul>\n<p><a href=\"https://blog.csdn.net/sinat_41696687/article/details/121903414\">https://blog.csdn.net/sinat_41696687/article/details/121903414</a></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// =>不只是function的简写，还有其他优点：和包围他的代码公用this，解决了this指向问题；原理是补获上下文的this；</span>\n<span class=\"token comment\">//如果箭头函数的外层有普通函数，this指向普通函数的this；</span>\n<span class=\"token comment\">//妹有普通函数，this指向全局变量</span>\n<span class=\"token comment\">//有</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是普通函数'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// true</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是箭头函数'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n      <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//妹有</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">//默认值</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//箭头函数是匿名函数，不能作为构造函数，不可以使用new；</span>\n\n<span class=\"token comment\">//箭头函数不绑定arguments,使用rest参数，妹有super和new.target;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>数组新增API，isArray/from/of,数组实例增加：entries（）,keys(),values（）等方法；</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//字符串拓展</span>\n<span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"hello ReactJS\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span><span class=\"token string\">\"中是否包含ReactJS\"</span><span class=\"token punctuation\">,</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ReactJS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span><span class=\"token string\">\"是否以h开头\"</span><span class=\"token punctuation\">,</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span><span class=\"token string\">\"是否以actJS结尾\"</span><span class=\"token punctuation\">,</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"actJS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//字符串模板</span>\n<span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">c\ny\nl</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>对象和数组新增拓展运算符号；</li>\n<li>新增模块化：import,export;</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Martin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">MakeLove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>新增Set()和Map数据结构；</li>\n<li>原生提供Proxy构造函数，用来生成Proxy实例；</li>\n<li>新增生成器<strong>Generater</strong>和<strong>Iterator</strong>；</li>\n</ul>\n<h3 id=\"3-Bigint\"><a href=\"#3-Bigint\" class=\"headerlink\" title=\"3.Bigint\"></a>3.Bigint</h3><blockquote>\n<p>支持任意长度的整数：末尾+n；</p>\n<p>不能混用常规的和Bigint</p>\n</blockquote>\n<h3 id=\"4-Promise-和-Await\"><a href=\"#4-Promise-和-Await\" class=\"headerlink\" title=\"4.Promise 和 Await\"></a>4.Promise 和 Await</h3><p><a href=\"https://es6.ruanyifeng.com/#docs/promise\">https://es6.ruanyifeng.com/#docs/promise</a></p>\n<ul>\n<li>Promise时异步编程的解决方案，比较传统的回调函数和事件更加合理强大；</li>\n<li>一个用来保存某个未来才会结束的事件；</li>\n</ul>\n<blockquote>\n<p>Promise对象有以下两个特点：</p>\n<p>（1）对象的状态不受外界影响，Promise对象代表一个异步操作，有三种状态：</p>\n<p>pending（进行中）、fulfilled（已成功）、rejected（已失败）只有异步操作的结果才能决定状态；</p>\n<p>（2）一旦状态改变，不会再变。Promise对象的状态改变只有：pending-&gt;fulfilled，pending-&gt;rejected</p>\n<p>状态凝固了就是resolved。如果改变已经发生了，再对Promise对象添加回调函数，也会立即得到结果；这与事件不同，事件一旦错过就不再获得结果；</p>\n<p>缺点：</p>\n<p>无法取消Promise，一旦新建就会立即执行，无法中途取消；</p>\n<p>不设置回调函数，Promise内部抛出的错误不会反映到外部；</p>\n<p>当处于pending状态时，无法得知目前进展到哪一个阶段；</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//promise构造函数接受一个函数作为参数，该函数的两个参数分别为resolve和reject</span>\n<span class=\"token comment\">//resolve函数是将Promise对象的状态从未完成变成成功；pending->resolved，异步操作成功时调用并将异步操作的结果作为参数传递出去；</span>\n<span class=\"token comment\">//reject函数时将promise对象的状态从未完成变成失败，pending->rejected，异步操作错误时将报错错位参数传递出去；</span>\npromise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">valueA</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>promise.prototype.then(参数1，参数2)</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//Promise实例具有then方法，定义在原型对象上，作为Promise实例添加状态改变时的回调函数；</span>\n<span class=\"token comment\">//可以采用链式写法</span>\n<span class=\"token function\">getJSON</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>promise.prototype.catch()</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//是then的别名，用于指定发生错误时的回调函数</span>\n<span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>promise.prototype.finally()</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//最后一定执行</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>promise.all()</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//用于将多个promise实例，包装成一个新的promise实例</span>\n<span class=\"token keyword\">const</span> p<span class=\"token operator\">=</span>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">,</span>p3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//只有p123的状态都称为fulfiled p才会成功；任一个rejected p也会；</span>\n<span class=\"token keyword\">const</span> databasePromise <span class=\"token operator\">=</span> <span class=\"token function\">connectDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> booksPromise <span class=\"token operator\">=</span> databasePromise\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>findAllBooks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> userPromise <span class=\"token operator\">=</span> databasePromise\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>getCurrentUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  booksPromise<span class=\"token punctuation\">,</span>\n  userPromise\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>books<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">pickTopRecommendations</span><span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Promise.race():多个实例任一成功都会返回成功；</li>\n</ul>\n<h3 id=\"5-数组方法\"><a href=\"#5-数组方法\" class=\"headerlink\" title=\"5.数组方法\"></a>5.数组方法</h3><h5 id=\"join-（数组转字符串）\"><a href=\"#join-（数组转字符串）\" class=\"headerlink\" title=\"join() （数组转字符串）\"></a>join() （数组转字符串）</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\t<span class=\"token comment\">//原数组不变</span>\n\n<span class=\"token comment\">//join实现重复字符串</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">repeateStr</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"push-和pop\"><a href=\"#push-和pop\" class=\"headerlink\" title=\"push()和pop()\"></a>push()和pop()</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//push 向数组的末尾添加元素</span>\n<span class=\"token comment\">//pop 删除并返回最后一个数组元素</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"shift-和unshift\"><a href=\"#shift-和unshift\" class=\"headerlink\" title=\"shift()和unshift()\"></a>shift()和unshift()</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// shift() 删除数组第一个元素，并返回该元素的值</span>\n<span class=\"token comment\">// unshift() 向数组的开头添加一个或多个元素，并返回新的长度</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort()\"></a>sort()</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// sort() 对数组元素进行排序，并返回当前数组:对字符的排序是按照字母的Unicode码进行排序的</span>\n<span class=\"token comment\">// reverse() 颠倒数组中元素的顺序，并返回当前数组</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//实现数值排序</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">-</span> b\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"concat-连接数组\"><a href=\"#concat-连接数组\" class=\"headerlink\" title=\"concat()  (连接数组)\"></a>concat()  (连接数组)</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// concat() 连接两个或多个数组，并返回新的数组</span>\n<span class=\"token comment\">// slice() 选取数组的的一部分，并返回一个新数组</span>\n<span class=\"token comment\">// splice() 从数组中添加或删除元素，并返回被删除的元素</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//传入二维数组，将其转化为一维数组</span>\n<span class=\"token keyword\">var</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">//讲数组当作元素项合并</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">//合并</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"slice-start-end\"><a href=\"#slice-start-end\" class=\"headerlink\" title=\"slice(start,end)\"></a>slice(start,end)</h5><p>·ES5新增·</p>\n<h5 id=\"indexOf-lastIndexOf-返回首次出现的位置，无返回-1\"><a href=\"#indexOf-lastIndexOf-返回首次出现的位置，无返回-1\" class=\"headerlink\" title=\"indexOf()  lastIndexOf()  返回首次出现的位置，无返回-1\"></a>indexOf()  lastIndexOf()  返回首次出现的位置，无返回-1</h5><h5 id=\"forEach-map-filter-some-every\"><a href=\"#forEach-map-filter-some-every\" class=\"headerlink\" title=\"forEach() map(),filter(),some(),every();\"></a>forEach() map(),filter(),some(),every();</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//指“映射”，方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值</span>\n<span class=\"token keyword\">var</span> arr1 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// “过滤”功能，方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。和filter() 方法类似，jquery中有个 grep()方法也用于数组元素过滤筛选。</span>\n<span class=\"token keyword\">var</span> arr2 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//判断数组中每一项都是否满足条件，只有所有项都满足条件，才会返回true。</span>\n<span class=\"token keyword\">var</span> arr3 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr3<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//判断数组中是否存在满足条件的项，只要有一项满足条件，就会返回true。</span>\n<span class=\"token keyword\">var</span> arr4 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr4<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"reduce-reduceRight\"><a href=\"#reduce-reduceRight\" class=\"headerlink\" title=\"reduce(),reduceRight()\"></a>reduce(),reduceRight()</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//归并方法:迭代数组中的所有项，然后生成一个最终返回值。</span>\n<span class=\"token comment\">//第一个参数是每一项调用的函数，函数接受四个参数分别是初始值，当前值，索引值，和当前数组</span>\n<span class=\"token comment\">//函数需要返回一个值，这个值会在下一次迭代中作为初始值。第二个参数是迭代初始值，参数可选，</span>\n<span class=\"token comment\">//如果缺省，初始值为数组第一项，从数组第一个项开始叠加，缺省参数要比正常传值少一次运算。</span>\n<span class=\"token comment\">//reduce()方法从数组的第一项开始，逐个遍历到最后。而 reduceRight()则从数组的最后一项开始，向前遍历到第一项。</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> prev <span class=\"token operator\">+</span> cur\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 55</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>·ES6新增方法·</p>\n<h5 id=\"Array-from\"><a href=\"#Array-from\" class=\"headerlink\" title=\"Array.from()\"></a>Array.from()</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> json <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//必须是数字</span>\n  <span class=\"token string-property property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"1\"</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\t\t\t<span class=\"token comment\">//需要长度</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token comment\">// []</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"Array-of\"><a href=\"#Array-of\" class=\"headerlink\" title=\"Array.of()\"></a>Array.of()</h5><h3 id=\"6-离线应用和客户端存储\"><a href=\"#6-离线应用和客户端存储\" class=\"headerlink\" title=\"6.离线应用和客户端存储\"></a>6.离线应用和客户端存储</h3><ul>\n<li>离线检测</li>\n</ul>\n<blockquote>\n<p>HTML5定义了一个navigator.online属性，如果为true表示设备能够上网；</p>\n</blockquote>\n<ul>\n<li>应用缓存</li>\n</ul>\n<blockquote>\n<p>H5使用appcache专门为开发离线Web应用设计；</p>\n<p>从浏览器的缓存区划分一块，使用一个描述文件列出需要下载和缓存的资源；</p>\n</blockquote>\n<ul>\n<li><p>数据存储</p>\n<ol>\n<li>​    Cookie</li>\n</ol>\n<blockquote>\n<p>Http Cookie最初在客户端用于存储会话信息。发送回服务器的额外信息可以用于唯一验证客户来自于发送的哪一个请求；</p>\n</blockquote>\n<blockquote>\n<p>限制：</p>\n<p>cookie在性质上是绑定在特定的域名下，当设定一个cookie后，再给创建他的域名发送请求时都会包含这个cookie，这个限制是的cookie中的信息只能让批准的接收者访问；无法被其他域访问；</p>\n<p>构成:</p>\n<p>Cookie由名称，值，域，路径，失效时间，安全标志组成；</p>\n</blockquote>\n<ol start=\"2\">\n<li>Web存储机制</li>\n</ol>\n<ul>\n<li>提供一个cookie之外存储会话的途径；</li>\n<li>提供一种存储大量跨会话的数据机制；</li>\n</ul>\n<blockquote>\n<p>storage类型</p>\n<p>它提供组大的存储空间，有clear（），getItem(name)，setItem（name,value)等；</p>\n<p>只能存储字符串；</p>\n</blockquote>\n<blockquote>\n<p>sessionStorage类型</p>\n<p>它用于存储某个会话的数据，也就是数据保存到浏览器关闭时。</p>\n<p>存储在sessionStorage中的数据可以跨越页面刷新而存在，同时如果浏览器支持，崩溃之后也能使用；</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//使用方法存储数据</span>\nsessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Martin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//使用属性存储数据</span>\nsessionStorage<span class=\"token punctuation\">.</span>book<span class=\"token operator\">=</span><span class=\"token string\">\"JS\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>globalStorage类型</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">globalStorage<span class=\"token punctuation\">[</span><span class=\"token string\">'域名'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"Martin\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>localStorage类型</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p>localStorage在H5中作为持久保存客户端数据的方案取代了globalStorage；</p>\n<p>与globalStorage不同；</p>\n</blockquote>\n<h3 id=\"7-cookie设置，token如何实现登录\"><a href=\"#7-cookie设置，token如何实现登录\" class=\"headerlink\" title=\"7.cookie设置，token如何实现登录\"></a>7.cookie设置，token如何实现登录</h3><h3 id=\"8-闭包\"><a href=\"#8-闭包\" class=\"headerlink\" title=\"8.闭包\"></a>8.闭包</h3><blockquote>\n<p>如果一个函数访问量此函数的父级或者父级以上的作用域变量，这个函数就是一个闭包；</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//匿名立即执行函数，访问了全局变量a;</span>\n<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//常见的闭包形式：函数嵌套</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    index<span class=\"token operator\">=</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        index<span class=\"token operator\">=</span>index<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//index=0+1; 将函数a赋值给全局变量c时，a会执行一次，局部变量index变为0+1，返回函数b；此时全局变量C为闭包函数b的引用；</span>\n<span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//index=0+1+2 //第一次执行c时，闭包函数b第一次执行；</span>\n<span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//index=0+1+2+2 //第二次执行c时，闭包函数b第二次执行；</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"特点：\"><a href=\"#特点：\" class=\"headerlink\" title=\"特点：\"></a>特点：</h5><ul>\n<li>被闭包函数访问的父级以上函数的局部变量会一致存在于内存中，不会被JS的垃圾回收机制回收；</li>\n<li>闭包函数u实现了对其他函数内部变量的访问；</li>\n</ul>\n<h5 id=\"JS垃圾回收机制：\"><a href=\"#JS垃圾回收机制：\" class=\"headerlink\" title=\"JS垃圾回收机制：\"></a>JS垃圾回收机制：</h5><ul>\n<li>如果一个对象不再被引用，这个对象会被GC回收；</li>\n<li>如果两个对象相互引用，而不再被第三者所引用，那么这两个对象都会被收回；</li>\n</ul>\n<h5 id=\"闭包的用途：\"><a href=\"#闭包的用途：\" class=\"headerlink\" title=\"闭包的用途：\"></a>闭包的用途：</h5><ul>\n<li>访问函数内部的变量；</li>\n<li>让变量始终保持在内存中；</li>\n</ul>\n<h5 id=\"应用场景：\"><a href=\"#应用场景：\" class=\"headerlink\" title=\"应用场景：\"></a>应用场景：</h5><ul>\n<li>模拟面向对象的代码风格</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">Say</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">return</span> Say<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\na<span class=\"token operator\">=</span><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"martin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nb<span class=\"token operator\">=</span><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jacy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"What are u doing ?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nothing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hang out with me ?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To there?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用<code>setTimeout</code>支持传参(通过闭包实现setTimeout第一个函数传参)</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> f1<span class=\"token operator\">=</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>封装私有变量：通过闭包定义能访问私有函数和私有变量的共有函数</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> counter<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> privateCounter<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//私有变量</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        privateCounter<span class=\"token operator\">+=</span>val<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function-variable function\">increment</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">decrement</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> privateCounter<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>模拟块作用域</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/764a7d4d2f244f3dbb50fa59da6105eb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pyd6ZizMzk=,size_15,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>onclick绑定的function中没有变量i，解析引擎会寻找父级作用域，最终找到全局变量i；for循环结束的时，i的值已经变成了4；所以此时任何onclick点击都会弹出4；</p>\n<p>也可使用let i=0;来解决；</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> elements<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> length<span class=\"token operator\">=</span>elements<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    elements<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//通过匿名闭包，把每次的i保存到一个变量中实现了效果</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>实现迭代器</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">var</span> next<span class=\"token operator\">=</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"闭包优点：\"><a href=\"#闭包优点：\" class=\"headerlink\" title=\"闭包优点：\"></a>闭包优点：</h5><ul>\n<li>减少全局变量的定义，避免全局变量污染；</li>\n<li>能够读取函数内部的变量；</li>\n<li>内存中维护一个变量，用作缓存；</li>\n</ul>\n<h5 id=\"闭包缺点：\"><a href=\"#闭包缺点：\" class=\"headerlink\" title=\"闭包缺点：\"></a>闭包缺点：</h5><ul>\n<li>造成内存泄漏，闭包会使函数中的变量一致保存在内存中，内存消耗极大；</li>\n</ul>\n<p>解决方法：使用完毕以后设置为null；</p>\n<ul>\n<li>闭包可能在父函数外部，改变父函数内部的值；</li>\n<li>由于闭包设计跨作用域访问，会导致性能损失；</li>\n</ul>\n<p>解决方法：通过跨作用域变量存储在局部变量中，直接访问局部变量来减轻对执行素的的影响；</p>\n<h3 id=\"9-如何实现原生ajax？\"><a href=\"#9-如何实现原生ajax？\" class=\"headerlink\" title=\"9.如何实现原生ajax？\"></a>9.如何实现原生ajax？</h3><blockquote>\n<p>Ajax是异步的JS和XML，是一种在无需重新加载整个网页的情况下，更新部分网页的技术；</p>\n</blockquote>\n<ul>\n<li>创建XMLHttpRequest对象；</li>\n</ul>\n<blockquote>\n<p>老版本的浏览器用的ActiveX对象；</p>\n<p>现代浏览器使用XMLHttpRequest对象；</p>\n</blockquote>\n<ul>\n<li>向服务器发送请求；</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">open(method,url,async)\t\t&#x2F;&#x2F;请求类型，url位置，true同步\nsend（string）\t\t\t&#x2F;&#x2F;仅用于POST；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>服务器响应；</li>\n</ul>\n<blockquote>\n<p>1.responseText   字符串形式的数据响应；</p>\n<p>2.responseXML  XML形式的数据响应；</p>\n</blockquote>\n<ul>\n<li>判断是否成；</li>\n</ul>\n<blockquote>\n<p>1.onreadystatechange    存储函数，每当readystate属性改变时调用；</p>\n<p>2.readyState              存有XMLHttpRequest的状态；0初始化，1连接建立，2请求已接受，3请求处理中，4请求已完成；</p>\n<p>3.status            200 ok   404 Page not found;</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//原生Ajax</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">oriAjax</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//判断浏览器版本</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>XMLHttpRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> ajaxRequest<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> ajaxRequest<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ActiveXObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Microsoft.XMLHTTP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    ajaxRequest<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ajaxRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ajaxRequest<span class=\"token punctuation\">.</span>readyState<span class=\"token operator\">==</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> ajaxRequest<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//更新dom结点</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span>ajaxRequest<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ajaxRequest<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h3 id=\"10-JS排序算法底层原理？\"><a href=\"#10-JS排序算法底层原理？\" class=\"headerlink\" title=\"10.JS排序算法底层原理？\"></a>10.JS排序算法底层原理？</h3><p>sort（）数组长度小于22使用插入排序，大于22快排；</p>\n<h3 id=\"11-nextTick\"><a href=\"#11-nextTick\" class=\"headerlink\" title=\"11.nextTick\"></a>11.nextTick</h3><h1 id=\"Git相关\"><a href=\"#Git相关\" class=\"headerlink\" title=\"Git相关\"></a>Git相关</h1><p><a href=\"https://worktile.com/kb/ask/20275.html\">https://worktile.com/kb/ask/20275.html</a></p>\n<h3 id=\"1-常见命令流程\"><a href=\"#1-常见命令流程\" class=\"headerlink\" title=\"1.常见命令流程\"></a>1.常见命令流程</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#初始化仓库</span>\n<span class=\"token function\">git</span> init  \n\n<span class=\"token comment\">#切换到主分支</span>\n<span class=\"token function\">git</span> checkout master\n\n<span class=\"token comment\">#获取最新变更</span>\n<span class=\"token function\">git</span> fetch origin\n\n<span class=\"token comment\">#基于主分支创建dev分支</span>\n<span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> dev origin/master\n\n<span class=\"token comment\">#添加到缓存</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span>\n\n<span class=\"token comment\">#提交到本地仓库</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"备注\"</span>\n\n<span class=\"token comment\">#获取最新更新</span>\n<span class=\"token function\">git</span> fetch origin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-其他指令\"><a href=\"#2-其他指令\" class=\"headerlink\" title=\"2.其他指令\"></a>2.其他指令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看仓库状态</span>\n<span class=\"token function\">git</span> status\n\n<span class=\"token comment\">#将某个工作区的文件添加暂存区</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> filename   或 <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span> 全部\n\n<span class=\"token comment\">#查看工作区和暂存区差异</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> 分支/id/\n\n<span class=\"token comment\">#查看历史记录</span>\n<span class=\"token function\">git</span> log\n\n<span class=\"token comment\">#代码回滚</span>\n<span class=\"token function\">git</span> reset HEAD^  \n\n<span class=\"token comment\">#删除版本库文件</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> filename\n\n<span class=\"token comment\">#同步远程仓库</span>\n<span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin master\n\n<span class=\"token comment\">#本地仓库推送到远程仓库</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com:username/仓库名.git\n\n<span class=\"token comment\">#克隆</span>\n<span class=\"token function\">git</span> clone url\n\n<span class=\"token comment\">#合并分支</span>\n<span class=\"token function\">git</span> merge dev\n\n<span class=\"token comment\">#删除分支</span>\n<span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-d</span> dev\n\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"NodeJS相关\"><a href=\"#NodeJS相关\" class=\"headerlink\" title=\"NodeJS相关\"></a>NodeJS相关</h1><h3 id=\"1-node流\"><a href=\"#1-node流\" class=\"headerlink\" title=\"1.node流\"></a>1.node流</h3><h3 id=\"2-node如何写接口？\"><a href=\"#2-node如何写接口？\" class=\"headerlink\" title=\"2.node如何写接口？\"></a>2.node如何写接口？</h3><h3 id=\"3-express\"><a href=\"#3-express\" class=\"headerlink\" title=\"3.express\"></a>3.express</h3><h3 id=\"4-node常用模块\"><a href=\"#4-node常用模块\" class=\"headerlink\" title=\"4.node常用模块\"></a>4.node常用模块</h3><h1 id=\"VUE相关\"><a href=\"#VUE相关\" class=\"headerlink\" title=\"VUE相关\"></a>VUE相关</h1><h3 id=\"1-Vue生命周期\"><a href=\"#1-Vue生命周期\" class=\"headerlink\" title=\"1.Vue生命周期\"></a>1.Vue生命周期</h3><p><img src=\"https://cn.vuejs.org/assets/lifecycle.16e4c08e.png\" alt=\"组件生命周期图示\"></p>\n<ul>\n<li>beforeCreate:实例初始化完成，props解析之后，data()和computed等选项处理之前立即调用；此时不能获得DOM结点；</li>\n<li>created：Vue实例已经创建，响应式数据、计算属性、方法和侦听器已经设置完成；但是由于没有挂载，依旧不能获得DOM结点；</li>\n<li>beforeMount：组件内容被渲染拿到页面之前执行的函数，组件已经完成了其响应式状态的设置，但是还没有创建DOM结点；</li>\n<li>mounted：组件渲染之后自动执行，一般异步请求写这里；这个阶段数据和DOM都已经完成渲染；</li>\n<li>beforeUpdate：数据变化的时候执行的函数，此时变化后的数据还未渲染到页面上；</li>\n<li>updated：数据变化以后执行，变化的数据已经渲染到页面上；</li>\n<li>beforeUnmount：当Vue应用被销毁时，自动执行的函数；</li>\n<li>unmounted：当vue应用销毁后，且DOM完全销毁之后自动执行；</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/24919918-2b75253c04f7b643.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp\" alt=\"img\"></p>\n<h3 id=\"2-路由守卫\"><a href=\"#2-路由守卫\" class=\"headerlink\" title=\"2.路由守卫\"></a>2.路由守卫</h3><h3 id=\"3-组件通信有哪些？\"><a href=\"#3-组件通信有哪些？\" class=\"headerlink\" title=\"3.组件通信有哪些？\"></a>3.组件通信有哪些？</h3><p><a href=\"https://blog.csdn.net/longfan_/article/details/125324201\">https://blog.csdn.net/longfan_/article/details/125324201</a></p>\n<blockquote>\n<p>一般分为如下关系：</p>\n<p>父子间通信；</p>\n<p>非父子间通信（兄弟，隔代）；</p>\n</blockquote>\n<ul>\n<li>props / $emit</li>\n</ul>\n<blockquote>\n<p>父组件通过props的方式向子组件传递数据，而通过$emit子组件可以像父组件通信；</p>\n<p>props只可以从上一级组件传递到下一级组件，即所谓的单向数据流，而且props只读，不可被修改，所有修改都会失效并警告；</p>\n<p>一、不应该在一个组组件内部改变prop，会破坏单向数据绑定；</p>\n</blockquote>\n<ul>\n<li></li>\n</ul>\n<h3 id=\"4-v-if与show区别\"><a href=\"#4-v-if与show区别\" class=\"headerlink\" title=\"4.v-if与show区别\"></a>4.v-if与show区别</h3><h3 id=\"5-VUE与React区别\"><a href=\"#5-VUE与React区别\" class=\"headerlink\" title=\"5.VUE与React区别\"></a>5.VUE与React区别</h3><h3 id=\"6-Vue-DIff算法\"><a href=\"#6-Vue-DIff算法\" class=\"headerlink\" title=\"6.Vue DIff算法\"></a>6.Vue DIff算法</h3><h3 id=\"7-Vue如何实现监听？\"><a href=\"#7-Vue如何实现监听？\" class=\"headerlink\" title=\"7.Vue如何实现监听？\"></a>7.Vue如何实现监听？</h3><h1 id=\"React相关\"><a href=\"#React相关\" class=\"headerlink\" title=\"React相关\"></a>React相关</h1><h3 id=\"1-类组件和函数组件\"><a href=\"#1-类组件和函数组件\" class=\"headerlink\" title=\"1.类组件和函数组件\"></a>1.类组件和函数组件</h3><ul>\n<li><h5 id=\"函数组件\"><a href=\"#函数组件\" class=\"headerlink\" title=\"函数组件\"></a>函数组件</h5></li>\n</ul>\n<blockquote>\n<p>使用JS函数创建的组件；</p>\n<p>首字母大写，React根据此区分组件和HTML元素；</p>\n<p>函数必须有返回值,不渲染内容需要返回null；</p>\n</blockquote>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//普通函数</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">头部组件</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//箭头函数</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Footer</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Rooter</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><h5 id=\"类组件\"><a href=\"#类组件\" class=\"headerlink\" title=\"类组件\"></a>类组件</h5></li>\n</ul>\n<blockquote>\n<p>使用class语法创建的组件；</p>\n<p>首字母大写，必须继承React.Component父类；</p>\n<p>必须有render函数，返回UI结构，可返回null;</p>\n</blockquote>\n<h5 id=\"状态组件：\"><a href=\"#状态组件：\" class=\"headerlink\" title=\"状态组件：\"></a>状态组件：</h5><ul>\n<li>无状态组件不定义状态，没有组件生命周期，只负责渲染UI，Hooks出现后函数组件也可以有状态；性能较好；</li>\n<li>有状态组件可以定义自己的状态，拥有生命周期，能力更强；</li>\n</ul>\n<h5 id=\"类组件问题：\"><a href=\"#类组件问题：\" class=\"headerlink\" title=\"类组件问题：\"></a>类组件问题：</h5><ul>\n<li>处理this问题：绑定箭头函数、bind，声明箭头函数</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 状态</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 事件处理函数</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>计数器：<span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">+</span>          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span>按钮<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 状态</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 事件处理函数</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>计数器：<span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">+</span>          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span>按钮<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 状态</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 事件处理函数</span>\n<span class=\"token operator\">+</span>  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>计数器：<span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span>按钮<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>setState</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">\n<span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 修改数据</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// key是要修改的数据名称，value是对应的新值</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token function-variable function\">updateList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 修改列表</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">,</span> <span class=\"token string\">'相机'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token function-variable function\">updateUser</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 修改对象</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'tony'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"相同点\"><a href=\"#相同点\" class=\"headerlink\" title=\"相同点\"></a>相同点</h5><ul>\n<li>都可以接受属性，返回React元素；</li>\n</ul>\n<h5 id=\"不同点\"><a href=\"#不同点\" class=\"headerlink\" title=\"不同点\"></a>不同点</h5><ul>\n<li>编程思想不同，类组件需要创建实例，基于面向对象的编程方法，而函数式是基于函数式编程；</li>\n<li>内存占用不用：类组件需要创建并保存实例，会占用一定内存，函数组件不需要创建实例，可以节约内存占用；</li>\n<li>捕获特性：函数组件具有值捕获特性；</li>\n<li>状态：类组件有自己的实例，可以定义状态，而且可以修改状态更新组件，函数式组件以前没有状态，现在可以使用 useState 使用状态</li>\n<li>生命周期：类组件有自己完整的生命周期，可以在生命周期内编写逻辑，函数组件以前没有生命周期，现在可以使用 useEffect 实现类似生命周期的功能</li>\n<li>逻辑复用：类组件可以通过继承实现逻辑复用，但官方推荐组件优于继承，函数组件可以通过自定义 hooks 实现逻辑的复用</li>\n<li>跳过更新：类组件可以通过 <code>shouldComponentUpdate</code> 和 <code>PureComponent</code> 来跳过更新，而函数式组件可以使用 <code>React.memo</code> 来跳过更新</li>\n<li>发展前景：未来函数式组件将会成为主流，因为它可以更好的屏蔽 this 问题、规范和复用逻辑，更好的适合事件分片和并发渲染</li>\n</ul>\n<h3 id=\"2-React-Hook及其优化策略\"><a href=\"#2-React-Hook及其优化策略\" class=\"headerlink\" title=\"2.React Hook及其优化策略\"></a>2.React Hook及其优化策略</h3><h1 id=\"Webpack相关\"><a href=\"#Webpack相关\" class=\"headerlink\" title=\"Webpack相关\"></a>Webpack相关</h1><h3 id=\"1-Webpack配置\"><a href=\"#1-Webpack配置\" class=\"headerlink\" title=\"1.Webpack配置\"></a>1.Webpack配置</h3><h3 id=\"2-loader执行顺序\"><a href=\"#2-loader执行顺序\" class=\"headerlink\" title=\"2.loader执行顺序\"></a>2.loader执行顺序</h3><h3 id=\"3-html-webpack-plugin的作用\"><a href=\"#3-html-webpack-plugin的作用\" class=\"headerlink\" title=\"3.html webpack plugin的作用\"></a>3.html webpack plugin的作用</h3><h1 id=\"计算机网络相关\"><a href=\"#计算机网络相关\" class=\"headerlink\" title=\"计算机网络相关\"></a>计算机网络相关</h1><h3 id=\"1-CDN的理解\"><a href=\"#1-CDN的理解\" class=\"headerlink\" title=\"1.CDN的理解\"></a>1.CDN的理解</h3><h3 id=\"2-跨域问题：什么是跨域？如何解决？\"><a href=\"#2-跨域问题：什么是跨域？如何解决？\" class=\"headerlink\" title=\"2.跨域问题：什么是跨域？如何解决？\"></a>2.跨域问题：什么是跨域？如何解决？</h3><h3 id=\"3-节流与防抖\"><a href=\"#3-节流与防抖\" class=\"headerlink\" title=\"3.节流与防抖\"></a>3.节流与防抖</h3><h3 id=\"4-TCP和UDP区别，三次握手，阻塞重传\"><a href=\"#4-TCP和UDP区别，三次握手，阻塞重传\" class=\"headerlink\" title=\"4.TCP和UDP区别，三次握手，阻塞重传\"></a>4.TCP和UDP区别，三次握手，阻塞重传</h3><h3 id=\"5-http和https\"><a href=\"#5-http和https\" class=\"headerlink\" title=\"5.http和https\"></a>5.http和https</h3><h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><h3 id=\"1-线程、进程\"><a href=\"#1-线程、进程\" class=\"headerlink\" title=\"1.线程、进程\"></a>1.线程、进程</h3><h1 id=\"网络安全相关\"><a href=\"#网络安全相关\" class=\"headerlink\" title=\"网络安全相关\"></a>网络安全相关</h1><h3 id=\"1-DDOS\"><a href=\"#1-DDOS\" class=\"headerlink\" title=\"1.DDOS\"></a>1.DDOS</h3><h3 id=\"2-Web相关漏洞原理\"><a href=\"#2-Web相关漏洞原理\" class=\"headerlink\" title=\"2.Web相关漏洞原理\"></a>2.Web相关漏洞原理</h3><h1 id=\"算法相关\"><a href=\"#算法相关\" class=\"headerlink\" title=\"算法相关\"></a>算法相关</h1><h1 id=\"Linux相关\"><a href=\"#Linux相关\" class=\"headerlink\" title=\"Linux相关\"></a>Linux相关</h1><h3 id=\"1-linux常用命令\"><a href=\"#1-linux常用命令\" class=\"headerlink\" title=\"1.linux常用命令\"></a>1.linux常用命令</h3><h1 id=\"项目相关\"><a href=\"#项目相关\" class=\"headerlink\" title=\"项目相关\"></a>项目相关</h1><h3 id=\"1-项目上线如何捕获异常？\"><a href=\"#1-项目上线如何捕获异常？\" class=\"headerlink\" title=\"1.项目上线如何捕获异常？\"></a>1.项目上线如何捕获异常？</h3><h3 id=\"2-项目加载头花\"><a href=\"#2-项目加载头花\" class=\"headerlink\" title=\"2.项目加载头花\"></a>2.项目加载头花</h3>","text":"前端三大件一、HTML二、CSS1.Flex布局 Flex布局包括容器和Item两部分；一个容器的所有子元素都成为他的item成员； flex-direction:主轴方向，row，row-reverse，column，column-recerse； flex-wrap:默认所有...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"面试笔记","slug":"面试笔记","count":4,"path":"api/tags/面试笔记.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E4%B8%89%E5%A4%A7%E4%BB%B6\"><span class=\"toc-text\">前端三大件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81HTML\"><span class=\"toc-text\">一、HTML</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81CSS\"><span class=\"toc-text\">二、CSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Flex%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">1.Flex布局</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-CSS%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8\"><span class=\"toc-text\">2.CSS预处理器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#CSS%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">CSS预处理器的作用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Sass%EF%BC%88-scss%EF%BC%89\"><span class=\"toc-text\">Sass（.scss）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Less\"><span class=\"toc-text\">Less</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Stylus\"><span class=\"toc-text\">Stylus</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%A4%9A%E5%B1%8F%E9%80%82%E5%BA%94%EF%BC%8C%E8%87%AA%E9%80%82%E5%BA%94%E5%B8%83%E5%B1%80%E5%92%8C%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">3.多屏适应，自适应布局和响应式布局区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E8%BF%87%E6%B8%A1%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">4.过渡动画</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%A0%87%E5%87%86%E7%9B%92%E6%A8%A1%E5%9E%8B%E5%92%8C%E6%80%AA%E5%BC%82%E7%9B%92%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">5.标准盒模型和怪异盒模型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8C%BA%E5%88%AB%EF%BC%9A%E6%80%BB%E5%AE%BD%E5%BA%A6%E7%9A%84%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F%E4%B8%8D%E4%B8%80%E6%A0%B7\"><span class=\"toc-text\">区别：总宽度的计算公式不一样</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81JS\"><span class=\"toc-text\">三、JS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">1.基本数据类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-ES6%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">2.ES6新特性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Bigint\"><span class=\"toc-text\">3.Bigint</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-Promise-%E5%92%8C-Await\"><span class=\"toc-text\">4.Promise 和 Await</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">5.数组方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#join-%EF%BC%88%E6%95%B0%E7%BB%84%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%89\"><span class=\"toc-text\">join() （数组转字符串）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#push-%E5%92%8Cpop\"><span class=\"toc-text\">push()和pop()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#shift-%E5%92%8Cunshift\"><span class=\"toc-text\">shift()和unshift()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#sort\"><span class=\"toc-text\">sort()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#concat-%E8%BF%9E%E6%8E%A5%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">concat()  (连接数组)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#slice-start-end\"><span class=\"toc-text\">slice(start,end)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#indexOf-lastIndexOf-%E8%BF%94%E5%9B%9E%E9%A6%96%E6%AC%A1%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%8C%E6%97%A0%E8%BF%94%E5%9B%9E-1\"><span class=\"toc-text\">indexOf()  lastIndexOf()  返回首次出现的位置，无返回-1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#forEach-map-filter-some-every\"><span class=\"toc-text\">forEach() map(),filter(),some(),every();</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#reduce-reduceRight\"><span class=\"toc-text\">reduce(),reduceRight()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Array-from\"><span class=\"toc-text\">Array.from()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Array-of\"><span class=\"toc-text\">Array.of()</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E7%A6%BB%E7%BA%BF%E5%BA%94%E7%94%A8%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">6.离线应用和客户端存储</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-cookie%E8%AE%BE%E7%BD%AE%EF%BC%8Ctoken%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">7.cookie设置，token如何实现登录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E9%97%AD%E5%8C%85\"><span class=\"toc-text\">8.闭包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">特点：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#JS%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%EF%BC%9A\"><span class=\"toc-text\">JS垃圾回收机制：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%97%AD%E5%8C%85%E7%9A%84%E7%94%A8%E9%80%94%EF%BC%9A\"><span class=\"toc-text\">闭包的用途：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%9A\"><span class=\"toc-text\">应用场景：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%97%AD%E5%8C%85%E4%BC%98%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">闭包优点：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%97%AD%E5%8C%85%E7%BC%BA%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">闭包缺点：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%94%9Fajax%EF%BC%9F\"><span class=\"toc-text\">9.如何实现原生ajax？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-JS%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86%EF%BC%9F\"><span class=\"toc-text\">10.JS排序算法底层原理？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-nextTick\"><span class=\"toc-text\">11.nextTick</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Git%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">Git相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">1.常见命令流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%85%B6%E4%BB%96%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">2.其他指令</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#NodeJS%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">NodeJS相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-node%E6%B5%81\"><span class=\"toc-text\">1.node流</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-node%E5%A6%82%E4%BD%95%E5%86%99%E6%8E%A5%E5%8F%A3%EF%BC%9F\"><span class=\"toc-text\">2.node如何写接口？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-express\"><span class=\"toc-text\">3.express</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-node%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">4.node常用模块</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#VUE%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">VUE相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\"><span class=\"toc-text\">1.Vue生命周期</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB\"><span class=\"toc-text\">2.路由守卫</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F\"><span class=\"toc-text\">3.组件通信有哪些？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-v-if%E4%B8%8Eshow%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">4.v-if与show区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-VUE%E4%B8%8EReact%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">5.VUE与React区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-Vue-DIff%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">6.Vue DIff算法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-Vue%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9B%91%E5%90%AC%EF%BC%9F\"><span class=\"toc-text\">7.Vue如何实现监听？</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#React%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">React相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%B1%BB%E7%BB%84%E4%BB%B6%E5%92%8C%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">1.类组件和函数组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">函数组件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">类组件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%8A%B6%E6%80%81%E7%BB%84%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">状态组件：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%BB%84%E4%BB%B6%E9%97%AE%E9%A2%98%EF%BC%9A\"><span class=\"toc-text\">类组件问题：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%90%8C%E7%82%B9\"><span class=\"toc-text\">相同点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%90%8C%E7%82%B9\"><span class=\"toc-text\">不同点</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-React-Hook%E5%8F%8A%E5%85%B6%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">2.React Hook及其优化策略</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Webpack%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">Webpack相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Webpack%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.Webpack配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-loader%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F\"><span class=\"toc-text\">2.loader执行顺序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-html-webpack-plugin%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">3.html webpack plugin的作用</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">计算机网络相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-CDN%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">1.CDN的理解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%EF%BC%9A%E4%BB%80%E4%B9%88%E6%98%AF%E8%B7%A8%E5%9F%9F%EF%BC%9F%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%EF%BC%9F\"><span class=\"toc-text\">2.跨域问题：什么是跨域？如何解决？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96\"><span class=\"toc-text\">3.节流与防抖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-TCP%E5%92%8CUDP%E5%8C%BA%E5%88%AB%EF%BC%8C%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%EF%BC%8C%E9%98%BB%E5%A1%9E%E9%87%8D%E4%BC%A0\"><span class=\"toc-text\">4.TCP和UDP区别，三次握手，阻塞重传</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-http%E5%92%8Chttps\"><span class=\"toc-text\">5.http和https</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">操作系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%BA%BF%E7%A8%8B%E3%80%81%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">1.线程、进程</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">网络安全相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-DDOS\"><span class=\"toc-text\">1.DDOS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Web%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">2.Web相关漏洞原理</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">算法相关</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">Linux相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.linux常用命令</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">项目相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7%E5%BC%82%E5%B8%B8%EF%BC%9F\"><span class=\"toc-text\">1.项目上线如何捕获异常？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%A1%B9%E7%9B%AE%E5%8A%A0%E8%BD%BD%E5%A4%B4%E8%8A%B1\"><span class=\"toc-text\">2.项目加载头花</span></a></li></ol></li></ol></li></ol>","author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端监控SDK","uid":"ff3c421ef1d9934b79c84f7fecbba276","slug":"前端监控SDK","date":"2023-03-27T10:51:45.000Z","updated":"2023-03-27T11:06:37.681Z","comments":true,"path":"api/articles/前端监控SDK.json","keywords":"Love And Freedom","cover":"img/bg13.jpg","text":"前端监控SDK一、为什么要聊前端监控？1.经典面试题 Q：在浏览器里，从输入url到页面展示，这中间发生了什么？ 浏览网页出现的问题 打开缓慢（使用的xp+ie，建议升级系统） 卡顿（电脑配置太差，建议升级硬件） 图片裂开（用户网络太差，建议升级宽带） 白屏（在我电脑上没问题啊！...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"面试笔记","slug":"面试笔记","count":4,"path":"api/tags/面试笔记.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数据可视化","uid":"4895101f3675479202285ec0ba9daedf","slug":"数据可视化基础","date":"2023-03-27T10:51:45.000Z","updated":"2023-03-27T11:05:51.744Z","comments":true,"path":"api/articles/数据可视化基础.json","keywords":"Love And Freedom","cover":"img/bg10.jpg","text":"数据可视化一、什么是数据可视化？ Anything that converts data into a visual representation. Charts\\Graphs\\Maps\\Tables… 1.数据可视化分类 科学可视化：科学实验数据的直观展示； 信息可视化：对抽象...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"可视化","slug":"可视化","count":2,"path":"api/tags/可视化.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}