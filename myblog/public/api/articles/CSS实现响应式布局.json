{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"CSS实现响应式布局","date":"2023-04-06T12:51:38.239Z","updated":"2023-04-06T13:44:24.362Z","comments":true,"path":"api/articles/CSS实现响应式布局.json","keywords":"Love And Freedom","cover":null,"content":"<h1 id=\"css实现响应式布局\"><a href=\"#css实现响应式布局\" class=\"headerlink\" title=\"css实现响应式布局\"></a>css实现响应式布局</h1><h3 id=\"1-响应式布局\"><a href=\"#1-响应式布局\" class=\"headerlink\" title=\"1.响应式布局\"></a>1.响应式布局</h3><blockquote>\n<p>响应式布局指同一页面在不同屏幕尺寸下有不同的布局；</p>\n<p>传统方式是PC端开发一套，手机端开发一套；</p>\n<p>使用响应式布局只需要开发一套就够了；</p>\n</blockquote>\n<ul>\n<li>检测视口分辨率，针对不同客户端来做代码处理，展现不同的布局和内容；</li>\n<li>css3媒体查询可以让我们针对不同的媒体类型定义不同的样式；</li>\n<li>重置浏览器窗口大小的过程，页面也会更具浏览器的宽度和高度重新渲染页面；</li>\n</ul>\n<h3 id=\"2-响应式实现方式\"><a href=\"#2-响应式实现方式\" class=\"headerlink\" title=\"2.响应式实现方式\"></a>2.响应式实现方式</h3><ul>\n<li>媒体查询</li>\n<li>流体布局</li>\n<li>弹性布局</li>\n<li>JS、Jquery来进行判断；</li>\n<li>Bootstrap第三方框架；</li>\n</ul>\n<h3 id=\"3-媒体查询\"><a href=\"#3-媒体查询\" class=\"headerlink\" title=\"3.媒体查询\"></a>3.媒体查询</h3><ul>\n<li>CSS3新语法；</li>\n<li>使用@media查询可以针对不同的媒体类型定义不同的样式；</li>\n<li>@media可以针对不同的屏幕尺寸设置不同的样式；</li>\n<li>@media才能够实现页面响应式布局；</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span>[<span class=\"token keyword\">not</span>|<span class=\"token keyword\">only</span>] type [<span class=\"token keyword\">and</span>][expr] <span class=\"token punctuation\">(</span>media feture<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">&#123;</span>\n    rules<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参数说明：\"><a href=\"#参数说明：\" class=\"headerlink\" title=\"参数说明：\"></a>参数说明：</h4><ul>\n<li>type媒体类型：all、screen；</li>\n<li>media feature :witdth (浏览器窗口尺寸，可加min\\max) device-width (设备的参数尺寸，可加min、max)；</li>\n<li>min-width:最小宽度，在媒体查询中，宽度大于或者等于最小宽度是，触发其css样式；</li>\n<li>max-width:最大宽度，在媒体查询中，宽度小于或等于最大宽度，触发；</li>\n</ul>\n<p>注：<br>1.一般都是先实现PC端页面，然后再去做其他设备的兼容（把媒体查询写在默认样式之后）<br>2.设置宽度时，最好不要写死(px)，而是用%单位参照父元素的大小</p>\n<h3 id=\"4-媒体查询方式\"><a href=\"#4-媒体查询方式\" class=\"headerlink\" title=\"4. 媒体查询方式\"></a>4. 媒体查询方式</h3><ul>\n<li>直接在css文件使用</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> type <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span>\n    \trules<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用import导入</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*设备宽度小于980px*/</span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'css/media.css'</span><span class=\"token punctuation\">)</span></span> all <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span>980px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用link链接</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/media.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>all and (max-width:980px)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>注：媒体查询的优先级与普通 CSS 完全相同，因此当使用媒体查询时，一定要将媒<br>体查询的样式放在默认样式之后，否则媒体查询会被默认样式覆盖，也就无法针对不同设备<br>进行变化;</p>\n<h3 id=\"5-补充知识：像素单位\"><a href=\"#5-补充知识：像素单位\" class=\"headerlink\" title=\"5.补充知识：像素单位\"></a>5.补充知识：像素单位</h3><ul>\n<li>px 像素相对长度，相对于屏幕分辨率而言；</li>\n<li>em 如果自身有font-size，em相对于自己的font-size，如果没有，则相对于父元素的font-size，任何浏览器的默认字体大小都是16px，所以1em=16px;</li>\n<li>% 相对于父元素的宽度大小；</li>\n<li>rem 相对于根元素（html)的字体大小);</li>\n<li>vw 视口的最大宽度， 1vw=视口宽度的百分之一；</li>\n<li>vh 视口的最大高度， 1vh=视口高度的百分之一；</li>\n</ul>\n","text":"css实现响应式布局1.响应式布局 响应式布局指同一页面在不同屏幕尺寸下有不同的布局； 传统方式是PC端开发一套，手机端开发一套； 使用响应式布局只需要开发一套就够了； 检测视口分辨率，针对不同客户端来做代码处理，展现不同的布局和内容； css3媒体查询可以让我们针对不同的媒体类...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#css%E5%AE%9E%E7%8E%B0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">css实现响应式布局</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">1.响应式布局</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">2.响应式实现方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">3.媒体查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E%EF%BC%9A\"><span class=\"toc-text\">参数说明：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">4. 媒体查询方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%EF%BC%9A%E5%83%8F%E7%B4%A0%E5%8D%95%E4%BD%8D\"><span class=\"toc-text\">5.补充知识：像素单位</span></a></li></ol></li></ol></li></ol>","author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Vue登录页面跳过","uid":"b9b4fcd437d7750f62f23ae4d11d445c","slug":"Vue-Admin-Template跳过登陆页面","date":"2023-06-25T13:33:45.000Z","updated":"2023-06-28T01:25:58.100Z","comments":true,"path":"api/articles/Vue-Admin-Template跳过登陆页面.json","keywords":"Love And Freedom","cover":"img/bg3.jpg","text":"Vue 登录页面跳过1.业务需求 后端暂时无法提供接口 需要查看前端页面效果 2.方法/* * @Author: Aruver * @Date: 2022-10-08 09:45:03 * @LastEditors: Aruver * @qq: 37919926 */ impor...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"VUE","slug":"VUE","count":17,"path":"api/tags/VUE.json"},{"name":"项目问题","slug":"项目问题","count":1,"path":"api/tags/项目问题.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Session And Cookie","uid":"26bc2020d08ea791ee82a8707889b8be","slug":"Session And Cookie","date":"2023-04-06T11:51:45.000Z","updated":"2023-04-06T03:26:21.125Z","comments":true,"path":"api/articles/Session And Cookie.json","keywords":"Love And Freedom","cover":"img/bg10.jpg","text":"Session And Cookie一、Session和Cookie简介1.简介 Cookie的出现是因为http是无状态协议，服务器记不住访问者，刷新一次页面可能就需要输入账号密码重新登录； cookie作用就是让服务器认识你； cookie可以认为是一个变量，形如name=v...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"session","slug":"session","count":1,"path":"api/tags/session.json"},{"name":"cookie","slug":"cookie","count":1,"path":"api/tags/cookie.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}