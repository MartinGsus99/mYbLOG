{"title":"Vue笔记","uid":"51d3872cd56d489d412dadd4338316da","slug":"JS","date":"2022-10-11T18:51:45.000Z","updated":"2023-04-04T13:35:28.254Z","comments":true,"path":"api/articles/JS.json","keywords":"Love And Freedom","cover":"img/vue.png","content":"<h1 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h1><h2 id=\"一、各司其职\"><a href=\"#一、各司其职\" class=\"headerlink\" title=\"一、各司其职\"></a>一、各司其职</h2><blockquote>\n<p>HTML、CSS、JS职能分离</p>\n</blockquote>\n<p><img src=\"https://s3.bmp.ovh/imgs/2023/01/17/f3f6568ed1415a07.jpg\"></p>\n<h2 id=\"二、组件封装\"><a href=\"#二、组件封装\" class=\"headerlink\" title=\"二、组件封装\"></a>二、组件封装</h2><blockquote>\n<p>好的UI组件具有正确性、拓展性、复用性</p>\n</blockquote>\n<h3 id=\"1-结构\"><a href=\"#1-结构\" class=\"headerlink\" title=\"1.结构\"></a>1.结构</h3><p>轮播图其实是一个列表结构；</p>\n<p>通过css将图片层叠在一起；</p>\n<h3 id=\"2-展现效果\"><a href=\"#2-展现效果\" class=\"headerlink\" title=\"2.展现效果\"></a>2.展现效果</h3><h3 id=\"3-行为\"><a href=\"#3-行为\" class=\"headerlink\" title=\"3.行为\"></a>3.行为</h3><p>API 功能</p>\n<p>Event 控制流：使用自定义的事件来解耦</p>\n<h3 id=\"4-改进空间\"><a href=\"#4-改进空间\" class=\"headerlink\" title=\"4.改进空间\"></a>4.改进空间</h3><ul>\n<li>解耦+</li>\n</ul>\n<h2 id=\"三、过程抽象\"><a href=\"#三、过程抽象\" class=\"headerlink\" title=\"三、过程抽象\"></a>三、过程抽象</h2><blockquote>\n<p>应用函数时编程思想</p>\n</blockquote>\n<ul>\n<li>用来处理局部细节控制的方法</li>\n<li>函数式编程思想的基础应用</li>\n</ul>\n<p>1.once</p>\n<p>一个方法设置了timewaite以后，如果在time内多次激活方法会报错，这个时候需要用once方法来禁止多次调用。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">buttons<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">button</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> target<span class=\"token operator\">=</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\t\t\t\t<span class=\"token comment\">//设置2000ms</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>，<span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">once</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>；\t\t<span class=\"token comment\">//仅允许调用一次；</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//once function的实现</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//外部闭包</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//内部闭包</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">const</span> ret<span class=\"token operator\">=</span><span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            fn<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>为了能够让”只执行一次“的需求覆盖不同的事件处理，我们可以将这个需求剥离出来。这个过程，我们成为<strong>过程抽象</strong></p>\n","text":"JS一、各司其职 HTML、CSS、JS职能分离 二、组件封装 好的UI组件具有正确性、拓展性、复用性 1.结构轮播图其实是一个列表结构； 通过css将图片层叠在一起； 2.展现效果3.行为API 功能 Event 控制流：使用自定义的事件来解耦 4.改进空间 解耦+ 三、过程抽...","link":"","photos":[],"count_time":{"symbolsCount":835,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JS\"><span class=\"toc-text\">JS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%90%84%E5%8F%B8%E5%85%B6%E8%81%8C\"><span class=\"toc-text\">一、各司其职</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85\"><span class=\"toc-text\">二、组件封装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">1.结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%B1%95%E7%8E%B0%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">2.展现效果</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%A1%8C%E4%B8%BA\"><span class=\"toc-text\">3.行为</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%94%B9%E8%BF%9B%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">4.改进空间</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E8%BF%87%E7%A8%8B%E6%8A%BD%E8%B1%A1\"><span class=\"toc-text\">三、过程抽象</span></a></li></ol></li></ol>","author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Axios详解","uid":"497057504cdf696233ca7859e8edacd2","slug":"Axios详解","date":"2022-10-27T08:09:00.000Z","updated":"2022-10-27T08:11:25.944Z","comments":true,"path":"api/articles/Axios详解.json","keywords":"Love And Freedom","cover":"img/axios.png","text":"Axios基于promise可以用于浏览器和node.js的网络请求库一、基础定义Promise1.promise一个对象，用于传递异步操作的消息；本意上可以理解为，承诺过一段时间返回一个结果。 basic 其实就是一个请求发出去以后，并不能马上获得需要的数据，因此整个js代码需...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"JS","slug":"JS","count":2,"path":"api/categories/JS.json"}],"tags":[{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vue笔记","uid":"51d3872cd56d489d412dadd4338316da","slug":"JS基础","date":"2022-09-11T18:51:45.000Z","updated":"2023-04-04T13:35:41.643Z","comments":true,"path":"api/articles/JS基础.json","keywords":"Love And Freedom","cover":"img/vue.png","text":"JS高级程序设计一、基础基础基础1.基础语法 for-in //for-in语法是一种精准的迭代语句，可以用来枚举对象的属性； for(property in expression)&#123; statement; &#125; for(var propName in wind...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}