{"title":"Vue登录页面跳过","uid":"b9b4fcd437d7750f62f23ae4d11d445c","slug":"Vue-Admin-Template跳过登陆页面","date":"2023-06-25T13:33:45.000Z","updated":"2023-06-28T01:25:58.100Z","comments":true,"path":"api/articles/Vue-Admin-Template跳过登陆页面.json","keywords":"Love And Freedom","cover":"img/bg3.jpg","content":"<h1 id=\"Vue-登录页面跳过\"><a href=\"#Vue-登录页面跳过\" class=\"headerlink\" title=\"Vue 登录页面跳过\"></a>Vue 登录页面跳过</h1><h3 id=\"1-业务需求\"><a href=\"#1-业务需求\" class=\"headerlink\" title=\"1.业务需求\"></a>1.业务需求</h3><ul>\n<li>后端暂时无法提供接口</li>\n<li>需要查看前端页面效果</li>\n</ul>\n<h3 id=\"2-方法\"><a href=\"#2-方法\" class=\"headerlink\" title=\"2.方法\"></a>2.方法</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/*\n * @Author: Aruver\n * @Date: 2022-10-08 09:45:03\n * @LastEditors: Aruver\n * @qq: 37919926\n */</span>\n<span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'./router'</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Message <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'element-ui'</span>\n<span class=\"token keyword\">import</span> NProgress <span class=\"token keyword\">from</span> <span class=\"token string\">'nprogress'</span> <span class=\"token comment\">// progress bar</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'nprogress/nprogress.css'</span> <span class=\"token comment\">// progress bar style</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getToken <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/utils/auth'</span> <span class=\"token comment\">// get token from cookie</span>\n<span class=\"token keyword\">import</span> getPageTitle <span class=\"token keyword\">from</span> <span class=\"token string\">'@/utils/get-page-title'</span>\n\nNProgress<span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">showSpinner</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// NProgress Configuration</span>\n\n<span class=\"token keyword\">const</span> whiteList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// no redirect whitelist</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// start progress bar</span>\n  NProgress<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// set page title</span>\n  document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// determine whether the user has logged in</span>\n  <span class=\"token comment\">// const hasToken = getToken()</span>\n\n  <span class=\"token comment\">// if (hasToken) &#123;</span>\n  <span class=\"token comment\">//   if (to.path === '/login') &#123;</span>\n  <span class=\"token comment\">//     // if is logged in, redirect to the home page</span>\n  <span class=\"token comment\">//     next(&#123; path: '/' &#125;)</span>\n  <span class=\"token comment\">//     NProgress.done()</span>\n  <span class=\"token comment\">//   &#125; else &#123;</span>\n  <span class=\"token comment\">//     const hasGetUserInfo = store.getters.name</span>\n  <span class=\"token comment\">//     if (hasGetUserInfo) &#123;</span>\n  <span class=\"token comment\">//       next()</span>\n  <span class=\"token comment\">//     &#125; else &#123;</span>\n  <span class=\"token comment\">//       try &#123;</span>\n  <span class=\"token comment\">//         // get user info</span>\n  <span class=\"token comment\">//         // await store.dispatch('user/getInfo')</span>\n\n  <span class=\"token comment\">//         next()</span>\n  <span class=\"token comment\">//       &#125; catch (error) &#123;</span>\n  <span class=\"token comment\">//         // remove token and go to login page to re-login</span>\n  <span class=\"token comment\">//         await store.dispatch('user/resetToken')</span>\n  <span class=\"token comment\">//         Message.error(error || 'Has Error')</span>\n  <span class=\"token comment\">//         next(`/login?redirect=$&#123;to.path&#125;`)</span>\n  <span class=\"token comment\">//         NProgress.done()</span>\n  <span class=\"token comment\">//       &#125;</span>\n  <span class=\"token comment\">//     &#125;</span>\n  <span class=\"token comment\">//   &#125;</span>\n  <span class=\"token comment\">// &#125; else &#123;</span>\n  <span class=\"token comment\">//   /* has no token*/</span>\n\n  <span class=\"token comment\">//   if (whiteList.indexOf(to.path) !== -1) &#123;</span>\n  <span class=\"token comment\">//     // in the free login whitelist, go directly</span>\n  <span class=\"token comment\">//     next()</span>\n  <span class=\"token comment\">//   &#125; else &#123;</span>\n  <span class=\"token comment\">//     // other pages that do not have permission to access are redirected to the login page.</span>\n  <span class=\"token comment\">//     next(`/login?redirect=$&#123;to.path&#125;`)</span>\n  <span class=\"token comment\">//     NProgress.done()</span>\n  <span class=\"token comment\">//   &#125;</span>\n  <span class=\"token comment\">// &#125;</span>\n\n  <span class=\"token comment\">//跳过登录，设置默认的token，然后输入其中一个路由进入页面</span>\n  <span class=\"token keyword\">const</span> hasToken <span class=\"token operator\">=</span> <span class=\"token string\">'admin-token'</span>\n  <span class=\"token keyword\">const</span> role <span class=\"token operator\">=</span> <span class=\"token string\">'admin'</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> accessRoutes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'permission/generateRoutes'</span><span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// dynamically add accessible routes</span>\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">addRoutes</span><span class=\"token punctuation\">(</span>accessRoutes<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// finish progress bar</span>\n  NProgress<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"Vue 登录页面跳过1.业务需求 后端暂时无法提供接口 需要查看前端页面效果 2.方法/* * @Author: Aruver * @Date: 2022-10-08 09:45:03 * @LastEditors: Aruver * @qq: 37919926 */ impor...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"VUE","slug":"VUE","count":17,"path":"api/tags/VUE.json"},{"name":"项目问题","slug":"项目问题","count":1,"path":"api/tags/项目问题.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Vue-%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BF%87\"><span class=\"toc-text\">Vue 登录页面跳过</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82\"><span class=\"toc-text\">1.业务需求</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.方法</span></a></li></ol></li></ol></li></ol>","author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Web Audio API","uid":"b9697662cdffe977cb41ca0017dc8bf9","slug":"Web Audio","date":"2023-06-26T13:13:45.000Z","updated":"2023-07-03T09:35:40.499Z","comments":true,"path":"api/articles/Web Audio.json","keywords":"Love And Freedom","cover":"img/bg3.jpg","text":"Web Audio API 实现功能可视化、音色合成器、动态混音、声音特效、3D空间音频、均衡器、环境混响 一、基础使用1.AudioContext为音频处理提供一个上下文环境，相当于一个中央控制器，控制音频路由的各个模块； 1.1音频结点AudioNode音频路由中的基本单位，...","link":"","photos":[],"count_time":{"symbolsCount":456,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":39,"path":"api/tags/笔记.json"},{"name":"JS","slug":"JS","count":5,"path":"api/tags/JS.json"},{"name":"TS","slug":"TS","count":2,"path":"api/tags/TS.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"CSS实现响应式布局","date":"2023-04-06T12:51:38.239Z","updated":"2023-04-06T13:44:24.362Z","comments":true,"path":"api/articles/CSS实现响应式布局.json","keywords":"Love And Freedom","cover":null,"text":"css实现响应式布局1.响应式布局 响应式布局指同一页面在不同屏幕尺寸下有不同的布局； 传统方式是PC端开发一套，手机端开发一套； 使用响应式布局只需要开发一套就够了； 检测视口分辨率，针对不同客户端来做代码处理，展现不同的布局和内容； css3媒体查询可以让我们针对不同的媒体类...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}