{"title":"Ajax","uid":"443175316fe2bc45d543d31728717318","slug":"Ajax","date":"2021-04-12T15:41:10.000Z","updated":"2021-07-22T05:37:04.000Z","comments":true,"path":"api/articles/Ajax.json","keywords":"Love And Freedom","cover":"img/bg1.jpg","content":"<h1 id=\"AJAX\"><a href=\"#AJAX\" class=\"headerlink\" title=\"AJAX\"></a>AJAX</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">Asynchronous Javascript and XML;(异步的javascript和XML)。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>✨无须更新整个网页的情况下，更新部分网页；</p>\n<p>传统的网页，需要更新或者提交一个表单，都需要重新加载整个网页；</p>\n<p>增强了B/S（浏览器/服务器）的体验性；</p>\n<p>高可用，更丰富，更动态；</p>\n<h4 id=\"Ajax的核心：XHR-XMLHttpRequest-能够以异步方式从服务器获取新数据；用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\"><a href=\"#Ajax的核心：XHR-XMLHttpRequest-能够以异步方式从服务器获取新数据；用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\" class=\"headerlink\" title=\"Ajax的核心：XHR(XMLHttpRequest),能够以异步方式从服务器获取新数据；用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\"></a>Ajax的核心：XHR(XMLHttpRequest),能够以异步方式从服务器获取新数据；用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">variable<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>1.发送请求open和send方法</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">xmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"test1.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>open（method，url，async）</td>\n<td>method：GET POST；url:文件在服务器的位置；async：true同步，false异步；</td>\n</tr>\n<tr>\n<td>send（string）</td>\n<td>将请求发送到服务器：string：仅适用于POST</td>\n</tr>\n</tbody></table>\n<p>2.GET 还是 POST？</p>\n<p>与 POST 相比，GET 更简单也更快，并且在大部分情况下都能用。</p>\n<p>然而，在以下情况中，请使用 POST 请求：</p>\n<ul>\n<li>无法使用缓存文件（更新服务器上的文件或数据库）</li>\n<li>向服务器发送大量数据（POST 没有数据量限制）</li>\n<li>发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠</li>\n</ul>\n<p>3.通过 AJAX，JavaScript 无需等待服务器的响应，而是：</p>\n<ul>\n<li>在等待服务器响应时执行其他脚本</li>\n<li>当响应就绪后对响应进行处理</li>\n</ul>\n","text":"AJAXAsynchronous Javascript and XML;(异步的javascript和XML)。 ✨无须更新整个网页的情况下，更新部分网页； 传统的网页，需要更新或者提交一个表单，都需要重新加载整个网页； 增强了B/S（浏览器/服务器）的体验性； 高可用，更丰富，...","link":"","photos":[],"count_time":{"symbolsCount":699,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"面试","slug":"面试","count":2,"path":"api/tags/面试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#AJAX\"><span class=\"toc-text\">AJAX</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Ajax%E7%9A%84%E6%A0%B8%E5%BF%83%EF%BC%9AXHR-XMLHttpRequest-%E8%83%BD%E5%A4%9F%E4%BB%A5%E5%BC%82%E6%AD%A5%E6%96%B9%E5%BC%8F%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%8E%B7%E5%8F%96%E6%96%B0%E6%95%B0%E6%8D%AE%EF%BC%9B%E7%94%A8%E4%BA%8E%E5%9C%A8%E5%90%8E%E5%8F%B0%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BA%A4%E6%8D%A2%E6%95%B0%E6%8D%AE%E3%80%82%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%E5%8F%AF%E4%BB%A5%E5%9C%A8%E4%B8%8D%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD%E6%95%B4%E4%B8%AA%E7%BD%91%E9%A1%B5%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E5%AF%B9%E7%BD%91%E9%A1%B5%E7%9A%84%E6%9F%90%E9%83%A8%E5%88%86%E8%BF%9B%E8%A1%8C%E6%9B%B4%E6%96%B0%E3%80%82\"><span class=\"toc-text\">Ajax的核心：XHR(XMLHttpRequest),能够以异步方式从服务器获取新数据；用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入步骤","uid":"236d610796a3ca78ed573065000889bd","slug":"SQL注入","date":"2021-07-22T03:20:00.000Z","updated":"2021-07-22T05:45:06.000Z","comments":true,"path":"api/articles/SQL注入.json","keywords":"Love And Freedom","cover":"img/bg5.jpeg","text":"SQL注入漏洞1、找注入点（’ “ ) ))）select * from users where id =’1’#’ limit 0,1;http://d1e1c384.yunyansec.com/Less-1/?id=1&#39;# 2、判断是否存在注入select * fro...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"网络安全","slug":"网络安全","count":2,"path":"api/categories/网络安全.json"}],"tags":[{"name":"Web","slug":"Web","count":3,"path":"api/tags/Web.json"},{"name":"SQL","slug":"SQL","count":1,"path":"api/tags/SQL.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"YK大佬的面试题","uid":"26c58976fec82d7921ed276f388f2352","slug":"前端","date":"2021-04-12T15:41:10.000Z","updated":"2021-07-22T05:40:22.000Z","comments":true,"path":"api/articles/前端.json","keywords":"Love And Freedom","cover":"img/bg10.jpg","text":"##前端面试问题一、JS1.JS中的基础数据类型： 6种，undefined，null，boolean，string，number，symbol；2.let和var的区别 let：有作用域，不会出现变量提升，不与全局环境挂钩；3.this是什么？ this是一种指向，在运行的时候...","link":"","photos":[],"count_time":{"symbolsCount":932,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":37,"path":"api/categories/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":41,"path":"api/tags/笔记.json"},{"name":"面试","slug":"面试","count":2,"path":"api/tags/面试.json"}],"author":{"name":"Martin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Be Myself","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}